// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: direct.proto

#include "direct.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace direct {
      template <typename>
PROTOBUF_CONSTEXPR StatusRequest::StatusRequest(::_pbi::ConstantInitialized) {}
struct StatusRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StatusRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StatusRequestDefaultTypeInternal() {}
  union {
    StatusRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StatusRequestDefaultTypeInternal _StatusRequest_default_instance_;

inline constexpr Status::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : search_iterations_{0},
        smoother_iterations_{0},
        step_size_{0},
        regularization_{0},
        gradient_norm_{0},
        search_direction_norm_{0},
        cost_difference_{0},
        improvement_{0},
        expected_{0},
        reduction_ratio_{0},
        solve_status_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Status::Status(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct StatusDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StatusDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StatusDefaultTypeInternal() {}
  union {
    Status _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StatusDefaultTypeInternal _Status_default_instance_;

inline constexpr Settings::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        configuration_length_{0},
        max_search_iterations_{0},
        max_smoother_iterations_{0},
        sensor_flag_{false},
        force_flag_{false},
        verbose_iteration_{false},
        verbose_optimize_{false},
        gradient_tolerance_{0},
        step_scaling_{0},
        regularization_initial_{0},
        regularization_scaling_{0},
        search_type_{0},
        verbose_cost_{false},
        time_scaling_force_{false},
        time_scaling_sensor_{false},
        assemble_sensor_jacobian_{false},
        search_direction_tolerance_{0},
        cost_tolerance_{0},
        assemble_force_jacobian_{false},
        assemble_sensor_norm_hessian_{false},
        assemble_force_norm_hessian_{false},
        first_step_position_sensors_{false},
        last_step_position_sensors_{false},
        last_step_velocity_sensors_{false} {}

template <typename>
PROTOBUF_CONSTEXPR Settings::Settings(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SettingsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SettingsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SettingsDefaultTypeInternal() {}
  union {
    Settings _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SettingsDefaultTypeInternal _Settings_default_instance_;

inline constexpr SensorInfoResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : start_index_{0},
        num_measurements_{0},
        dim_measurements_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SensorInfoResponse::SensorInfoResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SensorInfoResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SensorInfoResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SensorInfoResponseDefaultTypeInternal() {}
  union {
    SensorInfoResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SensorInfoResponseDefaultTypeInternal _SensorInfoResponse_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR SensorInfoRequest::SensorInfoRequest(::_pbi::ConstantInitialized) {}
struct SensorInfoRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SensorInfoRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SensorInfoRequestDefaultTypeInternal() {}
  union {
    SensorInfoRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SensorInfoRequestDefaultTypeInternal _SensorInfoRequest_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR ResetResponse::ResetResponse(::_pbi::ConstantInitialized) {}
struct ResetResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ResetResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ResetResponseDefaultTypeInternal() {}
  union {
    ResetResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ResetResponseDefaultTypeInternal _ResetResponse_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR ResetRequest::ResetRequest(::_pbi::ConstantInitialized) {}
struct ResetRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ResetRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ResetRequestDefaultTypeInternal() {}
  union {
    ResetRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ResetRequestDefaultTypeInternal _ResetRequest_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR OptimizeResponse::OptimizeResponse(::_pbi::ConstantInitialized) {}
struct OptimizeResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OptimizeResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OptimizeResponseDefaultTypeInternal() {}
  union {
    OptimizeResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OptimizeResponseDefaultTypeInternal _OptimizeResponse_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR OptimizeRequest::OptimizeRequest(::_pbi::ConstantInitialized) {}
struct OptimizeRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OptimizeRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OptimizeRequestDefaultTypeInternal() {}
  union {
    OptimizeRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OptimizeRequestDefaultTypeInternal _OptimizeRequest_default_instance_;

inline constexpr Noise::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : process_{},
        sensor_{},
        parameter_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Noise::Noise(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct NoiseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NoiseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NoiseDefaultTypeInternal() {}
  union {
    Noise _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NoiseDefaultTypeInternal _Noise_default_instance_;

inline constexpr MjModel::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        mjb_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        xml_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR MjModel::MjModel(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct MjModelDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MjModelDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MjModelDefaultTypeInternal() {}
  union {
    MjModel _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MjModelDefaultTypeInternal _MjModel_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR InitResponse::InitResponse(::_pbi::ConstantInitialized) {}
struct InitResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InitResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~InitResponseDefaultTypeInternal() {}
  union {
    InitResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InitResponseDefaultTypeInternal _InitResponse_default_instance_;

inline constexpr Data::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : configuration_{},
        velocity_{},
        acceleration_{},
        time_{},
        configuration_previous_{},
        sensor_measurement_{},
        sensor_prediction_{},
        sensor_mask_{},
        _sensor_mask_cached_byte_size_{0},
        force_measurement_{},
        force_prediction_{},
        parameters_{},
        parameters_previous_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Data::Data(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct DataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DataDefaultTypeInternal() {}
  union {
    Data _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DataDefaultTypeInternal _Data_default_instance_;

inline constexpr CostResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : gradient_{},
        hessian_{},
        residual_sensor_{},
        residual_force_{},
        jacobian_sensor_{},
        jacobian_force_{},
        norm_gradient_sensor_{},
        norm_gradient_force_{},
        norm_hessian_sensor_{},
        norm_hessian_force_{},
        total_{0},
        sensor_{0},
        force_{0},
        parameter_{0},
        initial_{0},
        nvar_{0},
        nsensor_{0},
        nforce_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CostResponse::CostResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CostResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CostResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CostResponseDefaultTypeInternal() {}
  union {
    CostResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CostResponseDefaultTypeInternal _CostResponse_default_instance_;

inline constexpr CostRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        derivatives_{false},
        internals_{false} {}

template <typename>
PROTOBUF_CONSTEXPR CostRequest::CostRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CostRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CostRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CostRequestDefaultTypeInternal() {}
  union {
    CostRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CostRequestDefaultTypeInternal _CostRequest_default_instance_;

inline constexpr StatusResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        status_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR StatusResponse::StatusResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct StatusResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StatusResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StatusResponseDefaultTypeInternal() {}
  union {
    StatusResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StatusResponseDefaultTypeInternal _StatusResponse_default_instance_;

inline constexpr SettingsResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        settings_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SettingsResponse::SettingsResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SettingsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SettingsResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SettingsResponseDefaultTypeInternal() {}
  union {
    SettingsResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SettingsResponseDefaultTypeInternal _SettingsResponse_default_instance_;

inline constexpr SettingsRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        settings_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SettingsRequest::SettingsRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SettingsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SettingsRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SettingsRequestDefaultTypeInternal() {}
  union {
    SettingsRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SettingsRequestDefaultTypeInternal _SettingsRequest_default_instance_;

inline constexpr NoiseResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        noise_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR NoiseResponse::NoiseResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct NoiseResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NoiseResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NoiseResponseDefaultTypeInternal() {}
  union {
    NoiseResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NoiseResponseDefaultTypeInternal _NoiseResponse_default_instance_;

inline constexpr NoiseRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        noise_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR NoiseRequest::NoiseRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct NoiseRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NoiseRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NoiseRequestDefaultTypeInternal() {}
  union {
    NoiseRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NoiseRequestDefaultTypeInternal _NoiseRequest_default_instance_;

inline constexpr InitRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        model_{nullptr},
        configuration_length_{0},
        buffer_length_{0} {}

template <typename>
PROTOBUF_CONSTEXPR InitRequest::InitRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct InitRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InitRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~InitRequestDefaultTypeInternal() {}
  union {
    InitRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InitRequestDefaultTypeInternal _InitRequest_default_instance_;

inline constexpr DataResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        data_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR DataResponse::DataResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct DataResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DataResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DataResponseDefaultTypeInternal() {}
  union {
    DataResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DataResponseDefaultTypeInternal _DataResponse_default_instance_;

inline constexpr DataRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        data_{nullptr},
        index_{0} {}

template <typename>
PROTOBUF_CONSTEXPR DataRequest::DataRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct DataRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DataRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DataRequestDefaultTypeInternal() {}
  union {
    DataRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DataRequestDefaultTypeInternal _DataRequest_default_instance_;
}  // namespace direct
static ::_pb::Metadata file_level_metadata_direct_2eproto[23];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_direct_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_direct_2eproto = nullptr;
const ::uint32_t TableStruct_direct_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    PROTOBUF_FIELD_OFFSET(::direct::MjModel, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::direct::MjModel, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::direct::MjModel, _impl_.mjb_),
    PROTOBUF_FIELD_OFFSET(::direct::MjModel, _impl_.xml_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::direct::InitRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::direct::InitRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::direct::InitRequest, _impl_.model_),
    PROTOBUF_FIELD_OFFSET(::direct::InitRequest, _impl_.configuration_length_),
    PROTOBUF_FIELD_OFFSET(::direct::InitRequest, _impl_.buffer_length_),
    0,
    1,
    2,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::direct::InitResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::direct::Data, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::direct::Data, _impl_.configuration_),
    PROTOBUF_FIELD_OFFSET(::direct::Data, _impl_.velocity_),
    PROTOBUF_FIELD_OFFSET(::direct::Data, _impl_.acceleration_),
    PROTOBUF_FIELD_OFFSET(::direct::Data, _impl_.time_),
    PROTOBUF_FIELD_OFFSET(::direct::Data, _impl_.configuration_previous_),
    PROTOBUF_FIELD_OFFSET(::direct::Data, _impl_.sensor_measurement_),
    PROTOBUF_FIELD_OFFSET(::direct::Data, _impl_.sensor_prediction_),
    PROTOBUF_FIELD_OFFSET(::direct::Data, _impl_.sensor_mask_),
    PROTOBUF_FIELD_OFFSET(::direct::Data, _impl_.force_measurement_),
    PROTOBUF_FIELD_OFFSET(::direct::Data, _impl_.force_prediction_),
    PROTOBUF_FIELD_OFFSET(::direct::Data, _impl_.parameters_),
    PROTOBUF_FIELD_OFFSET(::direct::Data, _impl_.parameters_previous_),
    PROTOBUF_FIELD_OFFSET(::direct::DataRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::direct::DataRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::direct::DataRequest, _impl_.index_),
    PROTOBUF_FIELD_OFFSET(::direct::DataRequest, _impl_.data_),
    ~0u,
    0,
    PROTOBUF_FIELD_OFFSET(::direct::DataResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::direct::DataResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::direct::DataResponse, _impl_.data_),
    0,
    PROTOBUF_FIELD_OFFSET(::direct::Settings, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::direct::Settings, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::direct::Settings, _impl_.configuration_length_),
    PROTOBUF_FIELD_OFFSET(::direct::Settings, _impl_.sensor_flag_),
    PROTOBUF_FIELD_OFFSET(::direct::Settings, _impl_.force_flag_),
    PROTOBUF_FIELD_OFFSET(::direct::Settings, _impl_.max_search_iterations_),
    PROTOBUF_FIELD_OFFSET(::direct::Settings, _impl_.max_smoother_iterations_),
    PROTOBUF_FIELD_OFFSET(::direct::Settings, _impl_.gradient_tolerance_),
    PROTOBUF_FIELD_OFFSET(::direct::Settings, _impl_.verbose_iteration_),
    PROTOBUF_FIELD_OFFSET(::direct::Settings, _impl_.verbose_optimize_),
    PROTOBUF_FIELD_OFFSET(::direct::Settings, _impl_.verbose_cost_),
    PROTOBUF_FIELD_OFFSET(::direct::Settings, _impl_.search_type_),
    PROTOBUF_FIELD_OFFSET(::direct::Settings, _impl_.step_scaling_),
    PROTOBUF_FIELD_OFFSET(::direct::Settings, _impl_.regularization_initial_),
    PROTOBUF_FIELD_OFFSET(::direct::Settings, _impl_.regularization_scaling_),
    PROTOBUF_FIELD_OFFSET(::direct::Settings, _impl_.time_scaling_force_),
    PROTOBUF_FIELD_OFFSET(::direct::Settings, _impl_.time_scaling_sensor_),
    PROTOBUF_FIELD_OFFSET(::direct::Settings, _impl_.search_direction_tolerance_),
    PROTOBUF_FIELD_OFFSET(::direct::Settings, _impl_.cost_tolerance_),
    PROTOBUF_FIELD_OFFSET(::direct::Settings, _impl_.assemble_sensor_jacobian_),
    PROTOBUF_FIELD_OFFSET(::direct::Settings, _impl_.assemble_force_jacobian_),
    PROTOBUF_FIELD_OFFSET(::direct::Settings, _impl_.assemble_sensor_norm_hessian_),
    PROTOBUF_FIELD_OFFSET(::direct::Settings, _impl_.assemble_force_norm_hessian_),
    PROTOBUF_FIELD_OFFSET(::direct::Settings, _impl_.first_step_position_sensors_),
    PROTOBUF_FIELD_OFFSET(::direct::Settings, _impl_.last_step_position_sensors_),
    PROTOBUF_FIELD_OFFSET(::direct::Settings, _impl_.last_step_velocity_sensors_),
    0,
    3,
    4,
    1,
    2,
    7,
    5,
    6,
    12,
    11,
    8,
    9,
    10,
    13,
    14,
    16,
    17,
    15,
    18,
    19,
    20,
    21,
    22,
    23,
    PROTOBUF_FIELD_OFFSET(::direct::SettingsRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::direct::SettingsRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::direct::SettingsRequest, _impl_.settings_),
    0,
    PROTOBUF_FIELD_OFFSET(::direct::SettingsResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::direct::SettingsResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::direct::SettingsResponse, _impl_.settings_),
    0,
    PROTOBUF_FIELD_OFFSET(::direct::CostRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::direct::CostRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::direct::CostRequest, _impl_.derivatives_),
    PROTOBUF_FIELD_OFFSET(::direct::CostRequest, _impl_.internals_),
    0,
    1,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::direct::CostResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::direct::CostResponse, _impl_.total_),
    PROTOBUF_FIELD_OFFSET(::direct::CostResponse, _impl_.sensor_),
    PROTOBUF_FIELD_OFFSET(::direct::CostResponse, _impl_.force_),
    PROTOBUF_FIELD_OFFSET(::direct::CostResponse, _impl_.parameter_),
    PROTOBUF_FIELD_OFFSET(::direct::CostResponse, _impl_.initial_),
    PROTOBUF_FIELD_OFFSET(::direct::CostResponse, _impl_.gradient_),
    PROTOBUF_FIELD_OFFSET(::direct::CostResponse, _impl_.hessian_),
    PROTOBUF_FIELD_OFFSET(::direct::CostResponse, _impl_.residual_sensor_),
    PROTOBUF_FIELD_OFFSET(::direct::CostResponse, _impl_.residual_force_),
    PROTOBUF_FIELD_OFFSET(::direct::CostResponse, _impl_.jacobian_sensor_),
    PROTOBUF_FIELD_OFFSET(::direct::CostResponse, _impl_.jacobian_force_),
    PROTOBUF_FIELD_OFFSET(::direct::CostResponse, _impl_.norm_gradient_sensor_),
    PROTOBUF_FIELD_OFFSET(::direct::CostResponse, _impl_.norm_gradient_force_),
    PROTOBUF_FIELD_OFFSET(::direct::CostResponse, _impl_.norm_hessian_sensor_),
    PROTOBUF_FIELD_OFFSET(::direct::CostResponse, _impl_.norm_hessian_force_),
    PROTOBUF_FIELD_OFFSET(::direct::CostResponse, _impl_.nvar_),
    PROTOBUF_FIELD_OFFSET(::direct::CostResponse, _impl_.nsensor_),
    PROTOBUF_FIELD_OFFSET(::direct::CostResponse, _impl_.nforce_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::direct::Noise, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::direct::Noise, _impl_.process_),
    PROTOBUF_FIELD_OFFSET(::direct::Noise, _impl_.sensor_),
    PROTOBUF_FIELD_OFFSET(::direct::Noise, _impl_.parameter_),
    PROTOBUF_FIELD_OFFSET(::direct::NoiseRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::direct::NoiseRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::direct::NoiseRequest, _impl_.noise_),
    0,
    PROTOBUF_FIELD_OFFSET(::direct::NoiseResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::direct::NoiseResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::direct::NoiseResponse, _impl_.noise_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::direct::ResetRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::direct::ResetResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::direct::OptimizeRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::direct::OptimizeResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::direct::Status, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::direct::Status, _impl_.search_iterations_),
    PROTOBUF_FIELD_OFFSET(::direct::Status, _impl_.smoother_iterations_),
    PROTOBUF_FIELD_OFFSET(::direct::Status, _impl_.step_size_),
    PROTOBUF_FIELD_OFFSET(::direct::Status, _impl_.regularization_),
    PROTOBUF_FIELD_OFFSET(::direct::Status, _impl_.gradient_norm_),
    PROTOBUF_FIELD_OFFSET(::direct::Status, _impl_.search_direction_norm_),
    PROTOBUF_FIELD_OFFSET(::direct::Status, _impl_.solve_status_),
    PROTOBUF_FIELD_OFFSET(::direct::Status, _impl_.cost_difference_),
    PROTOBUF_FIELD_OFFSET(::direct::Status, _impl_.improvement_),
    PROTOBUF_FIELD_OFFSET(::direct::Status, _impl_.expected_),
    PROTOBUF_FIELD_OFFSET(::direct::Status, _impl_.reduction_ratio_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::direct::StatusRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::direct::StatusResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::direct::StatusResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::direct::StatusResponse, _impl_.status_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::direct::SensorInfoRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::direct::SensorInfoResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::direct::SensorInfoResponse, _impl_.start_index_),
    PROTOBUF_FIELD_OFFSET(::direct::SensorInfoResponse, _impl_.num_measurements_),
    PROTOBUF_FIELD_OFFSET(::direct::SensorInfoResponse, _impl_.dim_measurements_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, 10, -1, sizeof(::direct::MjModel)},
        {12, 23, -1, sizeof(::direct::InitRequest)},
        {26, -1, -1, sizeof(::direct::InitResponse)},
        {34, -1, -1, sizeof(::direct::Data)},
        {54, 64, -1, sizeof(::direct::DataRequest)},
        {66, 75, -1, sizeof(::direct::DataResponse)},
        {76, 108, -1, sizeof(::direct::Settings)},
        {132, 141, -1, sizeof(::direct::SettingsRequest)},
        {142, 151, -1, sizeof(::direct::SettingsResponse)},
        {152, 162, -1, sizeof(::direct::CostRequest)},
        {164, -1, -1, sizeof(::direct::CostResponse)},
        {190, -1, -1, sizeof(::direct::Noise)},
        {201, 210, -1, sizeof(::direct::NoiseRequest)},
        {211, 220, -1, sizeof(::direct::NoiseResponse)},
        {221, -1, -1, sizeof(::direct::ResetRequest)},
        {229, -1, -1, sizeof(::direct::ResetResponse)},
        {237, -1, -1, sizeof(::direct::OptimizeRequest)},
        {245, -1, -1, sizeof(::direct::OptimizeResponse)},
        {253, -1, -1, sizeof(::direct::Status)},
        {272, -1, -1, sizeof(::direct::StatusRequest)},
        {280, 289, -1, sizeof(::direct::StatusResponse)},
        {290, -1, -1, sizeof(::direct::SensorInfoRequest)},
        {298, -1, -1, sizeof(::direct::SensorInfoResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::direct::_MjModel_default_instance_._instance,
    &::direct::_InitRequest_default_instance_._instance,
    &::direct::_InitResponse_default_instance_._instance,
    &::direct::_Data_default_instance_._instance,
    &::direct::_DataRequest_default_instance_._instance,
    &::direct::_DataResponse_default_instance_._instance,
    &::direct::_Settings_default_instance_._instance,
    &::direct::_SettingsRequest_default_instance_._instance,
    &::direct::_SettingsResponse_default_instance_._instance,
    &::direct::_CostRequest_default_instance_._instance,
    &::direct::_CostResponse_default_instance_._instance,
    &::direct::_Noise_default_instance_._instance,
    &::direct::_NoiseRequest_default_instance_._instance,
    &::direct::_NoiseResponse_default_instance_._instance,
    &::direct::_ResetRequest_default_instance_._instance,
    &::direct::_ResetResponse_default_instance_._instance,
    &::direct::_OptimizeRequest_default_instance_._instance,
    &::direct::_OptimizeResponse_default_instance_._instance,
    &::direct::_Status_default_instance_._instance,
    &::direct::_StatusRequest_default_instance_._instance,
    &::direct::_StatusResponse_default_instance_._instance,
    &::direct::_SensorInfoRequest_default_instance_._instance,
    &::direct::_SensorInfoResponse_default_instance_._instance,
};
const char descriptor_table_protodef_direct_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\014direct.proto\022\006direct\"=\n\007MjModel\022\020\n\003mjb"
    "\030\001 \001(\014H\000\210\001\001\022\020\n\003xml\030\002 \001(\tH\001\210\001\001B\006\n\004_mjbB\006\n"
    "\004_xml\"\246\001\n\013InitRequest\022#\n\005model\030\001 \001(\0132\017.d"
    "irect.MjModelH\000\210\001\001\022!\n\024configuration_leng"
    "th\030\002 \001(\005H\001\210\001\001\022\032\n\rbuffer_length\030\003 \001(\005H\002\210\001"
    "\001B\010\n\006_modelB\027\n\025_configuration_lengthB\020\n\016"
    "_buffer_length\"\016\n\014InitResponse\"\325\002\n\004Data\022"
    "\031\n\rconfiguration\030\001 \003(\001B\002\020\001\022\024\n\010velocity\030\002"
    " \003(\001B\002\020\001\022\030\n\014acceleration\030\003 \003(\001B\002\020\001\022\020\n\004ti"
    "me\030\004 \003(\001B\002\020\001\022\"\n\026configuration_previous\030\005"
    " \003(\001B\002\020\001\022\036\n\022sensor_measurement\030\006 \003(\001B\002\020\001"
    "\022\035\n\021sensor_prediction\030\007 \003(\001B\002\020\001\022\027\n\013senso"
    "r_mask\030\010 \003(\005B\002\020\001\022\035\n\021force_measurement\030\t "
    "\003(\001B\002\020\001\022\034\n\020force_prediction\030\n \003(\001B\002\020\001\022\026\n"
    "\nparameters\030\013 \003(\001B\002\020\001\022\037\n\023parameters_prev"
    "ious\030\014 \003(\001B\002\020\001\"8\n\013DataRequest\022\r\n\005index\030\001"
    " \001(\005\022\032\n\004data\030\002 \001(\0132\014.direct.Data\"*\n\014Data"
    "Response\022\032\n\004data\030\001 \001(\0132\014.direct.Data\"\234\013\n"
    "\010Settings\022!\n\024configuration_length\030\001 \001(\005H"
    "\000\210\001\001\022\030\n\013sensor_flag\030\002 \001(\010H\001\210\001\001\022\027\n\nforce_"
    "flag\030\003 \001(\010H\002\210\001\001\022\"\n\025max_search_iterations"
    "\030\004 \001(\005H\003\210\001\001\022$\n\027max_smoother_iterations\030\005"
    " \001(\005H\004\210\001\001\022\037\n\022gradient_tolerance\030\006 \001(\001H\005\210"
    "\001\001\022\036\n\021verbose_iteration\030\007 \001(\010H\006\210\001\001\022\035\n\020ve"
    "rbose_optimize\030\010 \001(\010H\007\210\001\001\022\031\n\014verbose_cos"
    "t\030\t \001(\010H\010\210\001\001\022\030\n\013search_type\030\n \001(\005H\t\210\001\001\022\031"
    "\n\014step_scaling\030\013 \001(\001H\n\210\001\001\022#\n\026regularizat"
    "ion_initial\030\014 \001(\001H\013\210\001\001\022#\n\026regularization"
    "_scaling\030\r \001(\001H\014\210\001\001\022\037\n\022time_scaling_forc"
    "e\030\016 \001(\010H\r\210\001\001\022 \n\023time_scaling_sensor\030\017 \001("
    "\010H\016\210\001\001\022\'\n\032search_direction_tolerance\030\020 \001"
    "(\001H\017\210\001\001\022\033\n\016cost_tolerance\030\021 \001(\001H\020\210\001\001\022%\n\030"
    "assemble_sensor_jacobian\030\022 \001(\010H\021\210\001\001\022$\n\027a"
    "ssemble_force_jacobian\030\023 \001(\010H\022\210\001\001\022)\n\034ass"
    "emble_sensor_norm_hessian\030\024 \001(\010H\023\210\001\001\022(\n\033"
    "assemble_force_norm_hessian\030\025 \001(\010H\024\210\001\001\022("
    "\n\033first_step_position_sensors\030\026 \001(\010H\025\210\001\001"
    "\022\'\n\032last_step_position_sensors\030\027 \001(\010H\026\210\001"
    "\001\022\'\n\032last_step_velocity_sensors\030\030 \001(\010H\027\210"
    "\001\001B\027\n\025_configuration_lengthB\016\n\014_sensor_f"
    "lagB\r\n\013_force_flagB\030\n\026_max_search_iterat"
    "ionsB\032\n\030_max_smoother_iterationsB\025\n\023_gra"
    "dient_toleranceB\024\n\022_verbose_iterationB\023\n"
    "\021_verbose_optimizeB\017\n\r_verbose_costB\016\n\014_"
    "search_typeB\017\n\r_step_scalingB\031\n\027_regular"
    "ization_initialB\031\n\027_regularization_scali"
    "ngB\025\n\023_time_scaling_forceB\026\n\024_time_scali"
    "ng_sensorB\035\n\033_search_direction_tolerance"
    "B\021\n\017_cost_toleranceB\033\n\031_assemble_sensor_"
    "jacobianB\032\n\030_assemble_force_jacobianB\037\n\035"
    "_assemble_sensor_norm_hessianB\036\n\034_assemb"
    "le_force_norm_hessianB\036\n\034_first_step_pos"
    "ition_sensorsB\035\n\033_last_step_position_sen"
    "sorsB\035\n\033_last_step_velocity_sensors\"G\n\017S"
    "ettingsRequest\022\'\n\010settings\030\001 \001(\0132\020.direc"
    "t.SettingsH\000\210\001\001B\013\n\t_settings\"6\n\020Settings"
    "Response\022\"\n\010settings\030\001 \001(\0132\020.direct.Sett"
    "ings\"]\n\013CostRequest\022\030\n\013derivatives\030\001 \001(\010"
    "H\000\210\001\001\022\026\n\tinternals\030\002 \001(\010H\001\210\001\001B\016\n\014_deriva"
    "tivesB\014\n\n_internals\"\260\003\n\014CostResponse\022\r\n\005"
    "total\030\001 \001(\001\022\016\n\006sensor\030\002 \001(\001\022\r\n\005force\030\003 \001"
    "(\001\022\021\n\tparameter\030\004 \001(\001\022\017\n\007initial\030\005 \001(\001\022\024"
    "\n\010gradient\030\006 \003(\001B\002\020\001\022\023\n\007hessian\030\007 \003(\001B\002\020"
    "\001\022\033\n\017residual_sensor\030\010 \003(\001B\002\020\001\022\032\n\016residu"
    "al_force\030\t \003(\001B\002\020\001\022\033\n\017jacobian_sensor\030\n "
    "\003(\001B\002\020\001\022\032\n\016jacobian_force\030\013 \003(\001B\002\020\001\022 \n\024n"
    "orm_gradient_sensor\030\014 \003(\001B\002\020\001\022\037\n\023norm_gr"
    "adient_force\030\r \003(\001B\002\020\001\022\037\n\023norm_hessian_s"
    "ensor\030\016 \003(\001B\002\020\001\022\036\n\022norm_hessian_force\030\017 "
    "\003(\001B\002\020\001\022\014\n\004nvar\030\020 \001(\005\022\017\n\007nsensor\030\021 \001(\005\022\016"
    "\n\006nforce\030\022 \001(\005\"G\n\005Noise\022\023\n\007process\030\001 \003(\001"
    "B\002\020\001\022\022\n\006sensor\030\002 \003(\001B\002\020\001\022\025\n\tparameter\030\003 "
    "\003(\001B\002\020\001\";\n\014NoiseRequest\022!\n\005noise\030\001 \001(\0132\r"
    ".direct.NoiseH\000\210\001\001B\010\n\006_noise\"-\n\rNoiseRes"
    "ponse\022\034\n\005noise\030\001 \001(\0132\r.direct.Noise\"\016\n\014R"
    "esetRequest\"\017\n\rResetResponse\"\021\n\017Optimize"
    "Request\"\022\n\020OptimizeResponse\"\220\002\n\006Status\022\031"
    "\n\021search_iterations\030\001 \001(\005\022\033\n\023smoother_it"
    "erations\030\002 \001(\005\022\021\n\tstep_size\030\003 \001(\001\022\026\n\016reg"
    "ularization\030\004 \001(\001\022\025\n\rgradient_norm\030\005 \001(\001"
    "\022\035\n\025search_direction_norm\030\006 \001(\001\022\024\n\014solve"
    "_status\030\007 \001(\005\022\027\n\017cost_difference\030\010 \001(\001\022\023"
    "\n\013improvement\030\t \001(\001\022\020\n\010expected\030\n \001(\001\022\027\n"
    "\017reduction_ratio\030\013 \001(\001\"\017\n\rStatusRequest\""
    "0\n\016StatusResponse\022\036\n\006status\030\001 \001(\0132\016.dire"
    "ct.Status\"\023\n\021SensorInfoRequest\"]\n\022Sensor"
    "InfoResponse\022\023\n\013start_index\030\001 \001(\005\022\030\n\020num"
    "_measurements\030\002 \001(\005\022\030\n\020dim_measurements\030"
    "\003 \001(\0052\211\004\n\006Direct\0221\n\004Init\022\023.direct.InitRe"
    "quest\032\024.direct.InitResponse\0221\n\004Data\022\023.di"
    "rect.DataRequest\032\024.direct.DataResponse\022="
    "\n\010Settings\022\027.direct.SettingsRequest\032\030.di"
    "rect.SettingsResponse\0221\n\004Cost\022\023.direct.C"
    "ostRequest\032\024.direct.CostResponse\0224\n\005Nois"
    "e\022\024.direct.NoiseRequest\032\025.direct.NoiseRe"
    "sponse\0224\n\005Reset\022\024.direct.ResetRequest\032\025."
    "direct.ResetResponse\022=\n\010Optimize\022\027.direc"
    "t.OptimizeRequest\032\030.direct.OptimizeRespo"
    "nse\0227\n\006Status\022\025.direct.StatusRequest\032\026.d"
    "irect.StatusResponse\022C\n\nSensorInfo\022\031.dir"
    "ect.SensorInfoRequest\032\032.direct.SensorInf"
    "oResponseb\006proto3"
};
static ::absl::once_flag descriptor_table_direct_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_direct_2eproto = {
    false,
    false,
    4057,
    descriptor_table_protodef_direct_2eproto,
    "direct.proto",
    &descriptor_table_direct_2eproto_once,
    nullptr,
    0,
    23,
    schemas,
    file_default_instances,
    TableStruct_direct_2eproto::offsets,
    file_level_metadata_direct_2eproto,
    file_level_enum_descriptors_direct_2eproto,
    file_level_service_descriptors_direct_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_direct_2eproto_getter() {
  return &descriptor_table_direct_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_direct_2eproto(&descriptor_table_direct_2eproto);
namespace direct {
// ===================================================================

class MjModel::_Internal {
 public:
  using HasBits = decltype(std::declval<MjModel>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(MjModel, _impl_._has_bits_);
  static void set_has_mjb(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_xml(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

MjModel::MjModel(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:direct.MjModel)
}
inline PROTOBUF_NDEBUG_INLINE MjModel::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        mjb_(arena, from.mjb_),
        xml_(arena, from.xml_) {}

MjModel::MjModel(
    ::google::protobuf::Arena* arena,
    const MjModel& from)
    : ::google::protobuf::Message(arena) {
  MjModel* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:direct.MjModel)
}
inline PROTOBUF_NDEBUG_INLINE MjModel::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        mjb_(arena),
        xml_(arena) {}

inline void MjModel::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
MjModel::~MjModel() {
  // @@protoc_insertion_point(destructor:direct.MjModel)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void MjModel::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.mjb_.Destroy();
  _impl_.xml_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void MjModel::Clear() {
// @@protoc_insertion_point(message_clear_start:direct.MjModel)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.mjb_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.xml_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* MjModel::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 26, 2> MjModel::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(MjModel, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_MjModel_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional string xml = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(MjModel, _impl_.xml_)}},
    // optional bytes mjb = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(MjModel, _impl_.mjb_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional bytes mjb = 1;
    {PROTOBUF_FIELD_OFFSET(MjModel, _impl_.mjb_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // optional string xml = 2;
    {PROTOBUF_FIELD_OFFSET(MjModel, _impl_.xml_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\16\0\3\0\0\0\0\0"
    "direct.MjModel"
    "xml"
  }},
};

::uint8_t* MjModel::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:direct.MjModel)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional bytes mjb = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_mjb();
    target = stream->WriteBytesMaybeAliased(1, _s, target);
  }

  // optional string xml = 2;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_xml();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "direct.MjModel.xml");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:direct.MjModel)
  return target;
}

::size_t MjModel::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:direct.MjModel)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional bytes mjb = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this->_internal_mjb());
    }

    // optional string xml = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_xml());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData MjModel::_class_data_ = {
    MjModel::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* MjModel::GetClassData() const {
  return &_class_data_;
}

void MjModel::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<MjModel*>(&to_msg);
  auto& from = static_cast<const MjModel&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:direct.MjModel)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_mjb(from._internal_mjb());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_xml(from._internal_xml());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MjModel::CopyFrom(const MjModel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:direct.MjModel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool MjModel::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* MjModel::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void MjModel::InternalSwap(MjModel* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.mjb_, &other->_impl_.mjb_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.xml_, &other->_impl_.xml_, arena);
}

::google::protobuf::Metadata MjModel::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_direct_2eproto_getter, &descriptor_table_direct_2eproto_once,
      file_level_metadata_direct_2eproto[0]);
}
// ===================================================================

class InitRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<InitRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(InitRequest, _impl_._has_bits_);
  static const ::direct::MjModel& model(const InitRequest* msg);
  static void set_has_model(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_configuration_length(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_buffer_length(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

const ::direct::MjModel& InitRequest::_Internal::model(const InitRequest* msg) {
  return *msg->_impl_.model_;
}
InitRequest::InitRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:direct.InitRequest)
}
inline PROTOBUF_NDEBUG_INLINE InitRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

InitRequest::InitRequest(
    ::google::protobuf::Arena* arena,
    const InitRequest& from)
    : ::google::protobuf::Message(arena) {
  InitRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.model_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::direct::MjModel>(arena, *from._impl_.model_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, configuration_length_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, configuration_length_),
           offsetof(Impl_, buffer_length_) -
               offsetof(Impl_, configuration_length_) +
               sizeof(Impl_::buffer_length_));

  // @@protoc_insertion_point(copy_constructor:direct.InitRequest)
}
inline PROTOBUF_NDEBUG_INLINE InitRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void InitRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, model_),
           0,
           offsetof(Impl_, buffer_length_) -
               offsetof(Impl_, model_) +
               sizeof(Impl_::buffer_length_));
}
InitRequest::~InitRequest() {
  // @@protoc_insertion_point(destructor:direct.InitRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void InitRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.model_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void InitRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:direct.InitRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.model_ != nullptr);
    _impl_.model_->Clear();
  }
  if (cached_has_bits & 0x00000006u) {
    ::memset(&_impl_.configuration_length_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.buffer_length_) -
        reinterpret_cast<char*>(&_impl_.configuration_length_)) + sizeof(_impl_.buffer_length_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* InitRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 0, 2> InitRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(InitRequest, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_InitRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional .direct.MjModel model = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(InitRequest, _impl_.model_)}},
    // optional int32 configuration_length = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(InitRequest, _impl_.configuration_length_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(InitRequest, _impl_.configuration_length_)}},
    // optional int32 buffer_length = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(InitRequest, _impl_.buffer_length_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(InitRequest, _impl_.buffer_length_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .direct.MjModel model = 1;
    {PROTOBUF_FIELD_OFFSET(InitRequest, _impl_.model_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional int32 configuration_length = 2;
    {PROTOBUF_FIELD_OFFSET(InitRequest, _impl_.configuration_length_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 buffer_length = 3;
    {PROTOBUF_FIELD_OFFSET(InitRequest, _impl_.buffer_length_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::direct::MjModel>()},
  }}, {{
  }},
};

::uint8_t* InitRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:direct.InitRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .direct.MjModel model = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::model(this),
        _Internal::model(this).GetCachedSize(), target, stream);
  }

  // optional int32 configuration_length = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_configuration_length(), target);
  }

  // optional int32 buffer_length = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_buffer_length(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:direct.InitRequest)
  return target;
}

::size_t InitRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:direct.InitRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional .direct.MjModel model = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.model_);
    }

    // optional int32 configuration_length = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_configuration_length());
    }

    // optional int32 buffer_length = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_buffer_length());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData InitRequest::_class_data_ = {
    InitRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* InitRequest::GetClassData() const {
  return &_class_data_;
}

void InitRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<InitRequest*>(&to_msg);
  auto& from = static_cast<const InitRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:direct.InitRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_model()->::direct::MjModel::MergeFrom(
          from._internal_model());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.configuration_length_ = from._impl_.configuration_length_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.buffer_length_ = from._impl_.buffer_length_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void InitRequest::CopyFrom(const InitRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:direct.InitRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool InitRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* InitRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void InitRequest::InternalSwap(InitRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(InitRequest, _impl_.buffer_length_)
      + sizeof(InitRequest::_impl_.buffer_length_)
      - PROTOBUF_FIELD_OFFSET(InitRequest, _impl_.model_)>(
          reinterpret_cast<char*>(&_impl_.model_),
          reinterpret_cast<char*>(&other->_impl_.model_));
}

::google::protobuf::Metadata InitRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_direct_2eproto_getter, &descriptor_table_direct_2eproto_once,
      file_level_metadata_direct_2eproto[1]);
}
// ===================================================================

class InitResponse::_Internal {
 public:
};

InitResponse::InitResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:direct.InitResponse)
}
InitResponse::InitResponse(
    ::google::protobuf::Arena* arena,
    const InitResponse& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  InitResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:direct.InitResponse)
}









::google::protobuf::Metadata InitResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_direct_2eproto_getter, &descriptor_table_direct_2eproto_once,
      file_level_metadata_direct_2eproto[2]);
}
// ===================================================================

class Data::_Internal {
 public:
};

Data::Data(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:direct.Data)
}
inline PROTOBUF_NDEBUG_INLINE Data::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : configuration_{visibility, arena, from.configuration_},
        velocity_{visibility, arena, from.velocity_},
        acceleration_{visibility, arena, from.acceleration_},
        time_{visibility, arena, from.time_},
        configuration_previous_{visibility, arena, from.configuration_previous_},
        sensor_measurement_{visibility, arena, from.sensor_measurement_},
        sensor_prediction_{visibility, arena, from.sensor_prediction_},
        sensor_mask_{visibility, arena, from.sensor_mask_},
        _sensor_mask_cached_byte_size_{0},
        force_measurement_{visibility, arena, from.force_measurement_},
        force_prediction_{visibility, arena, from.force_prediction_},
        parameters_{visibility, arena, from.parameters_},
        parameters_previous_{visibility, arena, from.parameters_previous_},
        _cached_size_{0} {}

Data::Data(
    ::google::protobuf::Arena* arena,
    const Data& from)
    : ::google::protobuf::Message(arena) {
  Data* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:direct.Data)
}
inline PROTOBUF_NDEBUG_INLINE Data::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : configuration_{visibility, arena},
        velocity_{visibility, arena},
        acceleration_{visibility, arena},
        time_{visibility, arena},
        configuration_previous_{visibility, arena},
        sensor_measurement_{visibility, arena},
        sensor_prediction_{visibility, arena},
        sensor_mask_{visibility, arena},
        _sensor_mask_cached_byte_size_{0},
        force_measurement_{visibility, arena},
        force_prediction_{visibility, arena},
        parameters_{visibility, arena},
        parameters_previous_{visibility, arena},
        _cached_size_{0} {}

inline void Data::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Data::~Data() {
  // @@protoc_insertion_point(destructor:direct.Data)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Data::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Data::Clear() {
// @@protoc_insertion_point(message_clear_start:direct.Data)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.configuration_.Clear();
  _impl_.velocity_.Clear();
  _impl_.acceleration_.Clear();
  _impl_.time_.Clear();
  _impl_.configuration_previous_.Clear();
  _impl_.sensor_measurement_.Clear();
  _impl_.sensor_prediction_.Clear();
  _impl_.sensor_mask_.Clear();
  _impl_.force_measurement_.Clear();
  _impl_.force_prediction_.Clear();
  _impl_.parameters_.Clear();
  _impl_.parameters_previous_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Data::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 12, 0, 0, 2> Data::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    12, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294963200,  // skipmap
    offsetof(decltype(_table_), field_entries),
    12,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Data_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated double configuration = 1 [packed = true];
    {::_pbi::TcParser::FastF64P1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Data, _impl_.configuration_)}},
    // repeated double velocity = 2 [packed = true];
    {::_pbi::TcParser::FastF64P1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Data, _impl_.velocity_)}},
    // repeated double acceleration = 3 [packed = true];
    {::_pbi::TcParser::FastF64P1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Data, _impl_.acceleration_)}},
    // repeated double time = 4 [packed = true];
    {::_pbi::TcParser::FastF64P1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(Data, _impl_.time_)}},
    // repeated double configuration_previous = 5 [packed = true];
    {::_pbi::TcParser::FastF64P1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(Data, _impl_.configuration_previous_)}},
    // repeated double sensor_measurement = 6 [packed = true];
    {::_pbi::TcParser::FastF64P1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(Data, _impl_.sensor_measurement_)}},
    // repeated double sensor_prediction = 7 [packed = true];
    {::_pbi::TcParser::FastF64P1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(Data, _impl_.sensor_prediction_)}},
    // repeated int32 sensor_mask = 8 [packed = true];
    {::_pbi::TcParser::FastV32P1,
     {66, 63, 0, PROTOBUF_FIELD_OFFSET(Data, _impl_.sensor_mask_)}},
    // repeated double force_measurement = 9 [packed = true];
    {::_pbi::TcParser::FastF64P1,
     {74, 63, 0, PROTOBUF_FIELD_OFFSET(Data, _impl_.force_measurement_)}},
    // repeated double force_prediction = 10 [packed = true];
    {::_pbi::TcParser::FastF64P1,
     {82, 63, 0, PROTOBUF_FIELD_OFFSET(Data, _impl_.force_prediction_)}},
    // repeated double parameters = 11 [packed = true];
    {::_pbi::TcParser::FastF64P1,
     {90, 63, 0, PROTOBUF_FIELD_OFFSET(Data, _impl_.parameters_)}},
    // repeated double parameters_previous = 12 [packed = true];
    {::_pbi::TcParser::FastF64P1,
     {98, 63, 0, PROTOBUF_FIELD_OFFSET(Data, _impl_.parameters_previous_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated double configuration = 1 [packed = true];
    {PROTOBUF_FIELD_OFFSET(Data, _impl_.configuration_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedDouble)},
    // repeated double velocity = 2 [packed = true];
    {PROTOBUF_FIELD_OFFSET(Data, _impl_.velocity_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedDouble)},
    // repeated double acceleration = 3 [packed = true];
    {PROTOBUF_FIELD_OFFSET(Data, _impl_.acceleration_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedDouble)},
    // repeated double time = 4 [packed = true];
    {PROTOBUF_FIELD_OFFSET(Data, _impl_.time_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedDouble)},
    // repeated double configuration_previous = 5 [packed = true];
    {PROTOBUF_FIELD_OFFSET(Data, _impl_.configuration_previous_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedDouble)},
    // repeated double sensor_measurement = 6 [packed = true];
    {PROTOBUF_FIELD_OFFSET(Data, _impl_.sensor_measurement_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedDouble)},
    // repeated double sensor_prediction = 7 [packed = true];
    {PROTOBUF_FIELD_OFFSET(Data, _impl_.sensor_prediction_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedDouble)},
    // repeated int32 sensor_mask = 8 [packed = true];
    {PROTOBUF_FIELD_OFFSET(Data, _impl_.sensor_mask_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt32)},
    // repeated double force_measurement = 9 [packed = true];
    {PROTOBUF_FIELD_OFFSET(Data, _impl_.force_measurement_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedDouble)},
    // repeated double force_prediction = 10 [packed = true];
    {PROTOBUF_FIELD_OFFSET(Data, _impl_.force_prediction_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedDouble)},
    // repeated double parameters = 11 [packed = true];
    {PROTOBUF_FIELD_OFFSET(Data, _impl_.parameters_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedDouble)},
    // repeated double parameters_previous = 12 [packed = true];
    {PROTOBUF_FIELD_OFFSET(Data, _impl_.parameters_previous_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedDouble)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* Data::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:direct.Data)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated double configuration = 1 [packed = true];
  if (this->_internal_configuration_size() > 0) {
    target = stream->WriteFixedPacked(1, _internal_configuration(), target);
  }

  // repeated double velocity = 2 [packed = true];
  if (this->_internal_velocity_size() > 0) {
    target = stream->WriteFixedPacked(2, _internal_velocity(), target);
  }

  // repeated double acceleration = 3 [packed = true];
  if (this->_internal_acceleration_size() > 0) {
    target = stream->WriteFixedPacked(3, _internal_acceleration(), target);
  }

  // repeated double time = 4 [packed = true];
  if (this->_internal_time_size() > 0) {
    target = stream->WriteFixedPacked(4, _internal_time(), target);
  }

  // repeated double configuration_previous = 5 [packed = true];
  if (this->_internal_configuration_previous_size() > 0) {
    target = stream->WriteFixedPacked(5, _internal_configuration_previous(), target);
  }

  // repeated double sensor_measurement = 6 [packed = true];
  if (this->_internal_sensor_measurement_size() > 0) {
    target = stream->WriteFixedPacked(6, _internal_sensor_measurement(), target);
  }

  // repeated double sensor_prediction = 7 [packed = true];
  if (this->_internal_sensor_prediction_size() > 0) {
    target = stream->WriteFixedPacked(7, _internal_sensor_prediction(), target);
  }

  // repeated int32 sensor_mask = 8 [packed = true];
  {
    int byte_size = _impl_._sensor_mask_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          8, _internal_sensor_mask(), byte_size, target);
    }
  }

  // repeated double force_measurement = 9 [packed = true];
  if (this->_internal_force_measurement_size() > 0) {
    target = stream->WriteFixedPacked(9, _internal_force_measurement(), target);
  }

  // repeated double force_prediction = 10 [packed = true];
  if (this->_internal_force_prediction_size() > 0) {
    target = stream->WriteFixedPacked(10, _internal_force_prediction(), target);
  }

  // repeated double parameters = 11 [packed = true];
  if (this->_internal_parameters_size() > 0) {
    target = stream->WriteFixedPacked(11, _internal_parameters(), target);
  }

  // repeated double parameters_previous = 12 [packed = true];
  if (this->_internal_parameters_previous_size() > 0) {
    target = stream->WriteFixedPacked(12, _internal_parameters_previous(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:direct.Data)
  return target;
}

::size_t Data::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:direct.Data)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated double configuration = 1 [packed = true];
  {
    std::size_t data_size = std::size_t{8} *
        ::_pbi::FromIntSize(this->_internal_configuration_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated double velocity = 2 [packed = true];
  {
    std::size_t data_size = std::size_t{8} *
        ::_pbi::FromIntSize(this->_internal_velocity_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated double acceleration = 3 [packed = true];
  {
    std::size_t data_size = std::size_t{8} *
        ::_pbi::FromIntSize(this->_internal_acceleration_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated double time = 4 [packed = true];
  {
    std::size_t data_size = std::size_t{8} *
        ::_pbi::FromIntSize(this->_internal_time_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated double configuration_previous = 5 [packed = true];
  {
    std::size_t data_size = std::size_t{8} *
        ::_pbi::FromIntSize(this->_internal_configuration_previous_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated double sensor_measurement = 6 [packed = true];
  {
    std::size_t data_size = std::size_t{8} *
        ::_pbi::FromIntSize(this->_internal_sensor_measurement_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated double sensor_prediction = 7 [packed = true];
  {
    std::size_t data_size = std::size_t{8} *
        ::_pbi::FromIntSize(this->_internal_sensor_prediction_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated int32 sensor_mask = 8 [packed = true];
  {
    std::size_t data_size = ::_pbi::WireFormatLite::Int32Size(
        this->_internal_sensor_mask())
    ;
    _impl_._sensor_mask_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated double force_measurement = 9 [packed = true];
  {
    std::size_t data_size = std::size_t{8} *
        ::_pbi::FromIntSize(this->_internal_force_measurement_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated double force_prediction = 10 [packed = true];
  {
    std::size_t data_size = std::size_t{8} *
        ::_pbi::FromIntSize(this->_internal_force_prediction_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated double parameters = 11 [packed = true];
  {
    std::size_t data_size = std::size_t{8} *
        ::_pbi::FromIntSize(this->_internal_parameters_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated double parameters_previous = 12 [packed = true];
  {
    std::size_t data_size = std::size_t{8} *
        ::_pbi::FromIntSize(this->_internal_parameters_previous_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Data::_class_data_ = {
    Data::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Data::GetClassData() const {
  return &_class_data_;
}

void Data::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Data*>(&to_msg);
  auto& from = static_cast<const Data&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:direct.Data)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_configuration()->MergeFrom(from._internal_configuration());
  _this->_internal_mutable_velocity()->MergeFrom(from._internal_velocity());
  _this->_internal_mutable_acceleration()->MergeFrom(from._internal_acceleration());
  _this->_internal_mutable_time()->MergeFrom(from._internal_time());
  _this->_internal_mutable_configuration_previous()->MergeFrom(from._internal_configuration_previous());
  _this->_internal_mutable_sensor_measurement()->MergeFrom(from._internal_sensor_measurement());
  _this->_internal_mutable_sensor_prediction()->MergeFrom(from._internal_sensor_prediction());
  _this->_internal_mutable_sensor_mask()->MergeFrom(from._internal_sensor_mask());
  _this->_internal_mutable_force_measurement()->MergeFrom(from._internal_force_measurement());
  _this->_internal_mutable_force_prediction()->MergeFrom(from._internal_force_prediction());
  _this->_internal_mutable_parameters()->MergeFrom(from._internal_parameters());
  _this->_internal_mutable_parameters_previous()->MergeFrom(from._internal_parameters_previous());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Data::CopyFrom(const Data& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:direct.Data)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Data::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Data::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Data::InternalSwap(Data* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.configuration_.InternalSwap(&other->_impl_.configuration_);
  _impl_.velocity_.InternalSwap(&other->_impl_.velocity_);
  _impl_.acceleration_.InternalSwap(&other->_impl_.acceleration_);
  _impl_.time_.InternalSwap(&other->_impl_.time_);
  _impl_.configuration_previous_.InternalSwap(&other->_impl_.configuration_previous_);
  _impl_.sensor_measurement_.InternalSwap(&other->_impl_.sensor_measurement_);
  _impl_.sensor_prediction_.InternalSwap(&other->_impl_.sensor_prediction_);
  _impl_.sensor_mask_.InternalSwap(&other->_impl_.sensor_mask_);
  _impl_.force_measurement_.InternalSwap(&other->_impl_.force_measurement_);
  _impl_.force_prediction_.InternalSwap(&other->_impl_.force_prediction_);
  _impl_.parameters_.InternalSwap(&other->_impl_.parameters_);
  _impl_.parameters_previous_.InternalSwap(&other->_impl_.parameters_previous_);
}

::google::protobuf::Metadata Data::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_direct_2eproto_getter, &descriptor_table_direct_2eproto_once,
      file_level_metadata_direct_2eproto[3]);
}
// ===================================================================

class DataRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<DataRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(DataRequest, _impl_._has_bits_);
  static const ::direct::Data& data(const DataRequest* msg);
  static void set_has_data(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::direct::Data& DataRequest::_Internal::data(const DataRequest* msg) {
  return *msg->_impl_.data_;
}
DataRequest::DataRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:direct.DataRequest)
}
inline PROTOBUF_NDEBUG_INLINE DataRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

DataRequest::DataRequest(
    ::google::protobuf::Arena* arena,
    const DataRequest& from)
    : ::google::protobuf::Message(arena) {
  DataRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.data_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::direct::Data>(arena, *from._impl_.data_)
                : nullptr;
  _impl_.index_ = from._impl_.index_;

  // @@protoc_insertion_point(copy_constructor:direct.DataRequest)
}
inline PROTOBUF_NDEBUG_INLINE DataRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void DataRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, data_),
           0,
           offsetof(Impl_, index_) -
               offsetof(Impl_, data_) +
               sizeof(Impl_::index_));
}
DataRequest::~DataRequest() {
  // @@protoc_insertion_point(destructor:direct.DataRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void DataRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.data_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void DataRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:direct.DataRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.data_ != nullptr);
    _impl_.data_->Clear();
  }
  _impl_.index_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* DataRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> DataRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(DataRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_DataRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .direct.Data data = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(DataRequest, _impl_.data_)}},
    // int32 index = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(DataRequest, _impl_.index_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(DataRequest, _impl_.index_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 index = 1;
    {PROTOBUF_FIELD_OFFSET(DataRequest, _impl_.index_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // .direct.Data data = 2;
    {PROTOBUF_FIELD_OFFSET(DataRequest, _impl_.data_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::direct::Data>()},
  }}, {{
  }},
};

::uint8_t* DataRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:direct.DataRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 index = 1;
  if (this->_internal_index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_index(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .direct.Data data = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::data(this),
        _Internal::data(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:direct.DataRequest)
  return target;
}

::size_t DataRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:direct.DataRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .direct.Data data = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.data_);
  }

  // int32 index = 1;
  if (this->_internal_index() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_index());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData DataRequest::_class_data_ = {
    DataRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* DataRequest::GetClassData() const {
  return &_class_data_;
}

void DataRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<DataRequest*>(&to_msg);
  auto& from = static_cast<const DataRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:direct.DataRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_data()->::direct::Data::MergeFrom(
        from._internal_data());
  }
  if (from._internal_index() != 0) {
    _this->_internal_set_index(from._internal_index());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DataRequest::CopyFrom(const DataRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:direct.DataRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool DataRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* DataRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void DataRequest::InternalSwap(DataRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DataRequest, _impl_.index_)
      + sizeof(DataRequest::_impl_.index_)
      - PROTOBUF_FIELD_OFFSET(DataRequest, _impl_.data_)>(
          reinterpret_cast<char*>(&_impl_.data_),
          reinterpret_cast<char*>(&other->_impl_.data_));
}

::google::protobuf::Metadata DataRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_direct_2eproto_getter, &descriptor_table_direct_2eproto_once,
      file_level_metadata_direct_2eproto[4]);
}
// ===================================================================

class DataResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<DataResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(DataResponse, _impl_._has_bits_);
  static const ::direct::Data& data(const DataResponse* msg);
  static void set_has_data(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::direct::Data& DataResponse::_Internal::data(const DataResponse* msg) {
  return *msg->_impl_.data_;
}
DataResponse::DataResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:direct.DataResponse)
}
inline PROTOBUF_NDEBUG_INLINE DataResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

DataResponse::DataResponse(
    ::google::protobuf::Arena* arena,
    const DataResponse& from)
    : ::google::protobuf::Message(arena) {
  DataResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.data_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::direct::Data>(arena, *from._impl_.data_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:direct.DataResponse)
}
inline PROTOBUF_NDEBUG_INLINE DataResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void DataResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.data_ = {};
}
DataResponse::~DataResponse() {
  // @@protoc_insertion_point(destructor:direct.DataResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void DataResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.data_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void DataResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:direct.DataResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.data_ != nullptr);
    _impl_.data_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* DataResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> DataResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(DataResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_DataResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .direct.Data data = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(DataResponse, _impl_.data_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .direct.Data data = 1;
    {PROTOBUF_FIELD_OFFSET(DataResponse, _impl_.data_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::direct::Data>()},
  }}, {{
  }},
};

::uint8_t* DataResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:direct.DataResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .direct.Data data = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::data(this),
        _Internal::data(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:direct.DataResponse)
  return target;
}

::size_t DataResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:direct.DataResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .direct.Data data = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.data_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData DataResponse::_class_data_ = {
    DataResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* DataResponse::GetClassData() const {
  return &_class_data_;
}

void DataResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<DataResponse*>(&to_msg);
  auto& from = static_cast<const DataResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:direct.DataResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_data()->::direct::Data::MergeFrom(
        from._internal_data());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DataResponse::CopyFrom(const DataResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:direct.DataResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool DataResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* DataResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void DataResponse::InternalSwap(DataResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.data_, other->_impl_.data_);
}

::google::protobuf::Metadata DataResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_direct_2eproto_getter, &descriptor_table_direct_2eproto_once,
      file_level_metadata_direct_2eproto[5]);
}
// ===================================================================

class Settings::_Internal {
 public:
  using HasBits = decltype(std::declval<Settings>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Settings, _impl_._has_bits_);
  static void set_has_configuration_length(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_sensor_flag(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_force_flag(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_max_search_iterations(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_max_smoother_iterations(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_gradient_tolerance(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_verbose_iteration(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_verbose_optimize(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_verbose_cost(HasBits* has_bits) {
    (*has_bits)[0] |= 4096u;
  }
  static void set_has_search_type(HasBits* has_bits) {
    (*has_bits)[0] |= 2048u;
  }
  static void set_has_step_scaling(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_regularization_initial(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static void set_has_regularization_scaling(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static void set_has_time_scaling_force(HasBits* has_bits) {
    (*has_bits)[0] |= 8192u;
  }
  static void set_has_time_scaling_sensor(HasBits* has_bits) {
    (*has_bits)[0] |= 16384u;
  }
  static void set_has_search_direction_tolerance(HasBits* has_bits) {
    (*has_bits)[0] |= 65536u;
  }
  static void set_has_cost_tolerance(HasBits* has_bits) {
    (*has_bits)[0] |= 131072u;
  }
  static void set_has_assemble_sensor_jacobian(HasBits* has_bits) {
    (*has_bits)[0] |= 32768u;
  }
  static void set_has_assemble_force_jacobian(HasBits* has_bits) {
    (*has_bits)[0] |= 262144u;
  }
  static void set_has_assemble_sensor_norm_hessian(HasBits* has_bits) {
    (*has_bits)[0] |= 524288u;
  }
  static void set_has_assemble_force_norm_hessian(HasBits* has_bits) {
    (*has_bits)[0] |= 1048576u;
  }
  static void set_has_first_step_position_sensors(HasBits* has_bits) {
    (*has_bits)[0] |= 2097152u;
  }
  static void set_has_last_step_position_sensors(HasBits* has_bits) {
    (*has_bits)[0] |= 4194304u;
  }
  static void set_has_last_step_velocity_sensors(HasBits* has_bits) {
    (*has_bits)[0] |= 8388608u;
  }
};

Settings::Settings(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:direct.Settings)
}
Settings::Settings(
    ::google::protobuf::Arena* arena, const Settings& from)
    : Settings(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE Settings::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Settings::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, configuration_length_),
           0,
           offsetof(Impl_, last_step_velocity_sensors_) -
               offsetof(Impl_, configuration_length_) +
               sizeof(Impl_::last_step_velocity_sensors_));
}
Settings::~Settings() {
  // @@protoc_insertion_point(destructor:direct.Settings)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Settings::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Settings::Clear() {
// @@protoc_insertion_point(message_clear_start:direct.Settings)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    ::memset(&_impl_.configuration_length_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.gradient_tolerance_) -
        reinterpret_cast<char*>(&_impl_.configuration_length_)) + sizeof(_impl_.gradient_tolerance_));
  }
  if (cached_has_bits & 0x0000ff00u) {
    ::memset(&_impl_.step_scaling_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.assemble_sensor_jacobian_) -
        reinterpret_cast<char*>(&_impl_.step_scaling_)) + sizeof(_impl_.assemble_sensor_jacobian_));
  }
  if (cached_has_bits & 0x00ff0000u) {
    ::memset(&_impl_.search_direction_tolerance_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.last_step_velocity_sensors_) -
        reinterpret_cast<char*>(&_impl_.search_direction_tolerance_)) + sizeof(_impl_.last_step_velocity_sensors_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Settings::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<5, 24, 0, 0, 2> Settings::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Settings, _impl_._has_bits_),
    0, // no _extensions_
    24, 248,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4278190080,  // skipmap
    offsetof(decltype(_table_), field_entries),
    24,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Settings_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional int32 configuration_length = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Settings, _impl_.configuration_length_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(Settings, _impl_.configuration_length_)}},
    // optional bool sensor_flag = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Settings, _impl_.sensor_flag_), 3>(),
     {16, 3, 0, PROTOBUF_FIELD_OFFSET(Settings, _impl_.sensor_flag_)}},
    // optional bool force_flag = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Settings, _impl_.force_flag_), 4>(),
     {24, 4, 0, PROTOBUF_FIELD_OFFSET(Settings, _impl_.force_flag_)}},
    // optional int32 max_search_iterations = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Settings, _impl_.max_search_iterations_), 1>(),
     {32, 1, 0, PROTOBUF_FIELD_OFFSET(Settings, _impl_.max_search_iterations_)}},
    // optional int32 max_smoother_iterations = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Settings, _impl_.max_smoother_iterations_), 2>(),
     {40, 2, 0, PROTOBUF_FIELD_OFFSET(Settings, _impl_.max_smoother_iterations_)}},
    // optional double gradient_tolerance = 6;
    {::_pbi::TcParser::FastF64S1,
     {49, 7, 0, PROTOBUF_FIELD_OFFSET(Settings, _impl_.gradient_tolerance_)}},
    // optional bool verbose_iteration = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Settings, _impl_.verbose_iteration_), 5>(),
     {56, 5, 0, PROTOBUF_FIELD_OFFSET(Settings, _impl_.verbose_iteration_)}},
    // optional bool verbose_optimize = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Settings, _impl_.verbose_optimize_), 6>(),
     {64, 6, 0, PROTOBUF_FIELD_OFFSET(Settings, _impl_.verbose_optimize_)}},
    // optional bool verbose_cost = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Settings, _impl_.verbose_cost_), 12>(),
     {72, 12, 0, PROTOBUF_FIELD_OFFSET(Settings, _impl_.verbose_cost_)}},
    // optional int32 search_type = 10;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Settings, _impl_.search_type_), 11>(),
     {80, 11, 0, PROTOBUF_FIELD_OFFSET(Settings, _impl_.search_type_)}},
    // optional double step_scaling = 11;
    {::_pbi::TcParser::FastF64S1,
     {89, 8, 0, PROTOBUF_FIELD_OFFSET(Settings, _impl_.step_scaling_)}},
    // optional double regularization_initial = 12;
    {::_pbi::TcParser::FastF64S1,
     {97, 9, 0, PROTOBUF_FIELD_OFFSET(Settings, _impl_.regularization_initial_)}},
    // optional double regularization_scaling = 13;
    {::_pbi::TcParser::FastF64S1,
     {105, 10, 0, PROTOBUF_FIELD_OFFSET(Settings, _impl_.regularization_scaling_)}},
    // optional bool time_scaling_force = 14;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Settings, _impl_.time_scaling_force_), 13>(),
     {112, 13, 0, PROTOBUF_FIELD_OFFSET(Settings, _impl_.time_scaling_force_)}},
    // optional bool time_scaling_sensor = 15;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Settings, _impl_.time_scaling_sensor_), 14>(),
     {120, 14, 0, PROTOBUF_FIELD_OFFSET(Settings, _impl_.time_scaling_sensor_)}},
    // optional double search_direction_tolerance = 16;
    {::_pbi::TcParser::FastF64S2,
     {385, 16, 0, PROTOBUF_FIELD_OFFSET(Settings, _impl_.search_direction_tolerance_)}},
    // optional double cost_tolerance = 17;
    {::_pbi::TcParser::FastF64S2,
     {393, 17, 0, PROTOBUF_FIELD_OFFSET(Settings, _impl_.cost_tolerance_)}},
    // optional bool assemble_sensor_jacobian = 18;
    {::_pbi::TcParser::FastV8S2,
     {400, 15, 0, PROTOBUF_FIELD_OFFSET(Settings, _impl_.assemble_sensor_jacobian_)}},
    // optional bool assemble_force_jacobian = 19;
    {::_pbi::TcParser::FastV8S2,
     {408, 18, 0, PROTOBUF_FIELD_OFFSET(Settings, _impl_.assemble_force_jacobian_)}},
    // optional bool assemble_sensor_norm_hessian = 20;
    {::_pbi::TcParser::FastV8S2,
     {416, 19, 0, PROTOBUF_FIELD_OFFSET(Settings, _impl_.assemble_sensor_norm_hessian_)}},
    // optional bool assemble_force_norm_hessian = 21;
    {::_pbi::TcParser::FastV8S2,
     {424, 20, 0, PROTOBUF_FIELD_OFFSET(Settings, _impl_.assemble_force_norm_hessian_)}},
    // optional bool first_step_position_sensors = 22;
    {::_pbi::TcParser::FastV8S2,
     {432, 21, 0, PROTOBUF_FIELD_OFFSET(Settings, _impl_.first_step_position_sensors_)}},
    // optional bool last_step_position_sensors = 23;
    {::_pbi::TcParser::FastV8S2,
     {440, 22, 0, PROTOBUF_FIELD_OFFSET(Settings, _impl_.last_step_position_sensors_)}},
    // optional bool last_step_velocity_sensors = 24;
    {::_pbi::TcParser::FastV8S2,
     {448, 23, 0, PROTOBUF_FIELD_OFFSET(Settings, _impl_.last_step_velocity_sensors_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 configuration_length = 1;
    {PROTOBUF_FIELD_OFFSET(Settings, _impl_.configuration_length_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional bool sensor_flag = 2;
    {PROTOBUF_FIELD_OFFSET(Settings, _impl_.sensor_flag_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool force_flag = 3;
    {PROTOBUF_FIELD_OFFSET(Settings, _impl_.force_flag_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional int32 max_search_iterations = 4;
    {PROTOBUF_FIELD_OFFSET(Settings, _impl_.max_search_iterations_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 max_smoother_iterations = 5;
    {PROTOBUF_FIELD_OFFSET(Settings, _impl_.max_smoother_iterations_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional double gradient_tolerance = 6;
    {PROTOBUF_FIELD_OFFSET(Settings, _impl_.gradient_tolerance_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // optional bool verbose_iteration = 7;
    {PROTOBUF_FIELD_OFFSET(Settings, _impl_.verbose_iteration_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool verbose_optimize = 8;
    {PROTOBUF_FIELD_OFFSET(Settings, _impl_.verbose_optimize_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool verbose_cost = 9;
    {PROTOBUF_FIELD_OFFSET(Settings, _impl_.verbose_cost_), _Internal::kHasBitsOffset + 12, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional int32 search_type = 10;
    {PROTOBUF_FIELD_OFFSET(Settings, _impl_.search_type_), _Internal::kHasBitsOffset + 11, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional double step_scaling = 11;
    {PROTOBUF_FIELD_OFFSET(Settings, _impl_.step_scaling_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // optional double regularization_initial = 12;
    {PROTOBUF_FIELD_OFFSET(Settings, _impl_.regularization_initial_), _Internal::kHasBitsOffset + 9, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // optional double regularization_scaling = 13;
    {PROTOBUF_FIELD_OFFSET(Settings, _impl_.regularization_scaling_), _Internal::kHasBitsOffset + 10, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // optional bool time_scaling_force = 14;
    {PROTOBUF_FIELD_OFFSET(Settings, _impl_.time_scaling_force_), _Internal::kHasBitsOffset + 13, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool time_scaling_sensor = 15;
    {PROTOBUF_FIELD_OFFSET(Settings, _impl_.time_scaling_sensor_), _Internal::kHasBitsOffset + 14, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional double search_direction_tolerance = 16;
    {PROTOBUF_FIELD_OFFSET(Settings, _impl_.search_direction_tolerance_), _Internal::kHasBitsOffset + 16, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // optional double cost_tolerance = 17;
    {PROTOBUF_FIELD_OFFSET(Settings, _impl_.cost_tolerance_), _Internal::kHasBitsOffset + 17, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // optional bool assemble_sensor_jacobian = 18;
    {PROTOBUF_FIELD_OFFSET(Settings, _impl_.assemble_sensor_jacobian_), _Internal::kHasBitsOffset + 15, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool assemble_force_jacobian = 19;
    {PROTOBUF_FIELD_OFFSET(Settings, _impl_.assemble_force_jacobian_), _Internal::kHasBitsOffset + 18, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool assemble_sensor_norm_hessian = 20;
    {PROTOBUF_FIELD_OFFSET(Settings, _impl_.assemble_sensor_norm_hessian_), _Internal::kHasBitsOffset + 19, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool assemble_force_norm_hessian = 21;
    {PROTOBUF_FIELD_OFFSET(Settings, _impl_.assemble_force_norm_hessian_), _Internal::kHasBitsOffset + 20, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool first_step_position_sensors = 22;
    {PROTOBUF_FIELD_OFFSET(Settings, _impl_.first_step_position_sensors_), _Internal::kHasBitsOffset + 21, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool last_step_position_sensors = 23;
    {PROTOBUF_FIELD_OFFSET(Settings, _impl_.last_step_position_sensors_), _Internal::kHasBitsOffset + 22, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool last_step_velocity_sensors = 24;
    {PROTOBUF_FIELD_OFFSET(Settings, _impl_.last_step_velocity_sensors_), _Internal::kHasBitsOffset + 23, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* Settings::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:direct.Settings)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 configuration_length = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_configuration_length(), target);
  }

  // optional bool sensor_flag = 2;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        2, this->_internal_sensor_flag(), target);
  }

  // optional bool force_flag = 3;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        3, this->_internal_force_flag(), target);
  }

  // optional int32 max_search_iterations = 4;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<4>(
            stream, this->_internal_max_search_iterations(), target);
  }

  // optional int32 max_smoother_iterations = 5;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<5>(
            stream, this->_internal_max_smoother_iterations(), target);
  }

  // optional double gradient_tolerance = 6;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        6, this->_internal_gradient_tolerance(), target);
  }

  // optional bool verbose_iteration = 7;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        7, this->_internal_verbose_iteration(), target);
  }

  // optional bool verbose_optimize = 8;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        8, this->_internal_verbose_optimize(), target);
  }

  // optional bool verbose_cost = 9;
  if (cached_has_bits & 0x00001000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        9, this->_internal_verbose_cost(), target);
  }

  // optional int32 search_type = 10;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<10>(
            stream, this->_internal_search_type(), target);
  }

  // optional double step_scaling = 11;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        11, this->_internal_step_scaling(), target);
  }

  // optional double regularization_initial = 12;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        12, this->_internal_regularization_initial(), target);
  }

  // optional double regularization_scaling = 13;
  if (cached_has_bits & 0x00000400u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        13, this->_internal_regularization_scaling(), target);
  }

  // optional bool time_scaling_force = 14;
  if (cached_has_bits & 0x00002000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        14, this->_internal_time_scaling_force(), target);
  }

  // optional bool time_scaling_sensor = 15;
  if (cached_has_bits & 0x00004000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        15, this->_internal_time_scaling_sensor(), target);
  }

  // optional double search_direction_tolerance = 16;
  if (cached_has_bits & 0x00010000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        16, this->_internal_search_direction_tolerance(), target);
  }

  // optional double cost_tolerance = 17;
  if (cached_has_bits & 0x00020000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        17, this->_internal_cost_tolerance(), target);
  }

  // optional bool assemble_sensor_jacobian = 18;
  if (cached_has_bits & 0x00008000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        18, this->_internal_assemble_sensor_jacobian(), target);
  }

  // optional bool assemble_force_jacobian = 19;
  if (cached_has_bits & 0x00040000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        19, this->_internal_assemble_force_jacobian(), target);
  }

  // optional bool assemble_sensor_norm_hessian = 20;
  if (cached_has_bits & 0x00080000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        20, this->_internal_assemble_sensor_norm_hessian(), target);
  }

  // optional bool assemble_force_norm_hessian = 21;
  if (cached_has_bits & 0x00100000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        21, this->_internal_assemble_force_norm_hessian(), target);
  }

  // optional bool first_step_position_sensors = 22;
  if (cached_has_bits & 0x00200000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        22, this->_internal_first_step_position_sensors(), target);
  }

  // optional bool last_step_position_sensors = 23;
  if (cached_has_bits & 0x00400000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        23, this->_internal_last_step_position_sensors(), target);
  }

  // optional bool last_step_velocity_sensors = 24;
  if (cached_has_bits & 0x00800000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        24, this->_internal_last_step_velocity_sensors(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:direct.Settings)
  return target;
}

::size_t Settings::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:direct.Settings)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional int32 configuration_length = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_configuration_length());
    }

    // optional int32 max_search_iterations = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_max_search_iterations());
    }

    // optional int32 max_smoother_iterations = 5;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_max_smoother_iterations());
    }

    // optional bool sensor_flag = 2;
    if (cached_has_bits & 0x00000008u) {
      total_size += 2;
    }

    // optional bool force_flag = 3;
    if (cached_has_bits & 0x00000010u) {
      total_size += 2;
    }

    // optional bool verbose_iteration = 7;
    if (cached_has_bits & 0x00000020u) {
      total_size += 2;
    }

    // optional bool verbose_optimize = 8;
    if (cached_has_bits & 0x00000040u) {
      total_size += 2;
    }

    // optional double gradient_tolerance = 6;
    if (cached_has_bits & 0x00000080u) {
      total_size += 9;
    }

  }
  if (cached_has_bits & 0x0000ff00u) {
    // optional double step_scaling = 11;
    if (cached_has_bits & 0x00000100u) {
      total_size += 9;
    }

    // optional double regularization_initial = 12;
    if (cached_has_bits & 0x00000200u) {
      total_size += 9;
    }

    // optional double regularization_scaling = 13;
    if (cached_has_bits & 0x00000400u) {
      total_size += 9;
    }

    // optional int32 search_type = 10;
    if (cached_has_bits & 0x00000800u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_search_type());
    }

    // optional bool verbose_cost = 9;
    if (cached_has_bits & 0x00001000u) {
      total_size += 2;
    }

    // optional bool time_scaling_force = 14;
    if (cached_has_bits & 0x00002000u) {
      total_size += 2;
    }

    // optional bool time_scaling_sensor = 15;
    if (cached_has_bits & 0x00004000u) {
      total_size += 2;
    }

    // optional bool assemble_sensor_jacobian = 18;
    if (cached_has_bits & 0x00008000u) {
      total_size += 3;
    }

  }
  if (cached_has_bits & 0x00ff0000u) {
    // optional double search_direction_tolerance = 16;
    if (cached_has_bits & 0x00010000u) {
      total_size += 10;
    }

    // optional double cost_tolerance = 17;
    if (cached_has_bits & 0x00020000u) {
      total_size += 10;
    }

    // optional bool assemble_force_jacobian = 19;
    if (cached_has_bits & 0x00040000u) {
      total_size += 3;
    }

    // optional bool assemble_sensor_norm_hessian = 20;
    if (cached_has_bits & 0x00080000u) {
      total_size += 3;
    }

    // optional bool assemble_force_norm_hessian = 21;
    if (cached_has_bits & 0x00100000u) {
      total_size += 3;
    }

    // optional bool first_step_position_sensors = 22;
    if (cached_has_bits & 0x00200000u) {
      total_size += 3;
    }

    // optional bool last_step_position_sensors = 23;
    if (cached_has_bits & 0x00400000u) {
      total_size += 3;
    }

    // optional bool last_step_velocity_sensors = 24;
    if (cached_has_bits & 0x00800000u) {
      total_size += 3;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Settings::_class_data_ = {
    Settings::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Settings::GetClassData() const {
  return &_class_data_;
}

void Settings::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Settings*>(&to_msg);
  auto& from = static_cast<const Settings&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:direct.Settings)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.configuration_length_ = from._impl_.configuration_length_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.max_search_iterations_ = from._impl_.max_search_iterations_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.max_smoother_iterations_ = from._impl_.max_smoother_iterations_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.sensor_flag_ = from._impl_.sensor_flag_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.force_flag_ = from._impl_.force_flag_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.verbose_iteration_ = from._impl_.verbose_iteration_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.verbose_optimize_ = from._impl_.verbose_optimize_;
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_impl_.gradient_tolerance_ = from._impl_.gradient_tolerance_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      _this->_impl_.step_scaling_ = from._impl_.step_scaling_;
    }
    if (cached_has_bits & 0x00000200u) {
      _this->_impl_.regularization_initial_ = from._impl_.regularization_initial_;
    }
    if (cached_has_bits & 0x00000400u) {
      _this->_impl_.regularization_scaling_ = from._impl_.regularization_scaling_;
    }
    if (cached_has_bits & 0x00000800u) {
      _this->_impl_.search_type_ = from._impl_.search_type_;
    }
    if (cached_has_bits & 0x00001000u) {
      _this->_impl_.verbose_cost_ = from._impl_.verbose_cost_;
    }
    if (cached_has_bits & 0x00002000u) {
      _this->_impl_.time_scaling_force_ = from._impl_.time_scaling_force_;
    }
    if (cached_has_bits & 0x00004000u) {
      _this->_impl_.time_scaling_sensor_ = from._impl_.time_scaling_sensor_;
    }
    if (cached_has_bits & 0x00008000u) {
      _this->_impl_.assemble_sensor_jacobian_ = from._impl_.assemble_sensor_jacobian_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00ff0000u) {
    if (cached_has_bits & 0x00010000u) {
      _this->_impl_.search_direction_tolerance_ = from._impl_.search_direction_tolerance_;
    }
    if (cached_has_bits & 0x00020000u) {
      _this->_impl_.cost_tolerance_ = from._impl_.cost_tolerance_;
    }
    if (cached_has_bits & 0x00040000u) {
      _this->_impl_.assemble_force_jacobian_ = from._impl_.assemble_force_jacobian_;
    }
    if (cached_has_bits & 0x00080000u) {
      _this->_impl_.assemble_sensor_norm_hessian_ = from._impl_.assemble_sensor_norm_hessian_;
    }
    if (cached_has_bits & 0x00100000u) {
      _this->_impl_.assemble_force_norm_hessian_ = from._impl_.assemble_force_norm_hessian_;
    }
    if (cached_has_bits & 0x00200000u) {
      _this->_impl_.first_step_position_sensors_ = from._impl_.first_step_position_sensors_;
    }
    if (cached_has_bits & 0x00400000u) {
      _this->_impl_.last_step_position_sensors_ = from._impl_.last_step_position_sensors_;
    }
    if (cached_has_bits & 0x00800000u) {
      _this->_impl_.last_step_velocity_sensors_ = from._impl_.last_step_velocity_sensors_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Settings::CopyFrom(const Settings& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:direct.Settings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Settings::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Settings::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Settings::InternalSwap(Settings* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Settings, _impl_.last_step_velocity_sensors_)
      + sizeof(Settings::_impl_.last_step_velocity_sensors_)
      - PROTOBUF_FIELD_OFFSET(Settings, _impl_.configuration_length_)>(
          reinterpret_cast<char*>(&_impl_.configuration_length_),
          reinterpret_cast<char*>(&other->_impl_.configuration_length_));
}

::google::protobuf::Metadata Settings::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_direct_2eproto_getter, &descriptor_table_direct_2eproto_once,
      file_level_metadata_direct_2eproto[6]);
}
// ===================================================================

class SettingsRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<SettingsRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SettingsRequest, _impl_._has_bits_);
  static const ::direct::Settings& settings(const SettingsRequest* msg);
  static void set_has_settings(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::direct::Settings& SettingsRequest::_Internal::settings(const SettingsRequest* msg) {
  return *msg->_impl_.settings_;
}
SettingsRequest::SettingsRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:direct.SettingsRequest)
}
inline PROTOBUF_NDEBUG_INLINE SettingsRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SettingsRequest::SettingsRequest(
    ::google::protobuf::Arena* arena,
    const SettingsRequest& from)
    : ::google::protobuf::Message(arena) {
  SettingsRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.settings_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::direct::Settings>(arena, *from._impl_.settings_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:direct.SettingsRequest)
}
inline PROTOBUF_NDEBUG_INLINE SettingsRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SettingsRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.settings_ = {};
}
SettingsRequest::~SettingsRequest() {
  // @@protoc_insertion_point(destructor:direct.SettingsRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SettingsRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.settings_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SettingsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:direct.SettingsRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.settings_ != nullptr);
    _impl_.settings_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SettingsRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> SettingsRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SettingsRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SettingsRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional .direct.Settings settings = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SettingsRequest, _impl_.settings_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .direct.Settings settings = 1;
    {PROTOBUF_FIELD_OFFSET(SettingsRequest, _impl_.settings_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::direct::Settings>()},
  }}, {{
  }},
};

::uint8_t* SettingsRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:direct.SettingsRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .direct.Settings settings = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::settings(this),
        _Internal::settings(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:direct.SettingsRequest)
  return target;
}

::size_t SettingsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:direct.SettingsRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .direct.Settings settings = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.settings_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SettingsRequest::_class_data_ = {
    SettingsRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SettingsRequest::GetClassData() const {
  return &_class_data_;
}

void SettingsRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SettingsRequest*>(&to_msg);
  auto& from = static_cast<const SettingsRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:direct.SettingsRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_settings()->::direct::Settings::MergeFrom(
        from._internal_settings());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SettingsRequest::CopyFrom(const SettingsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:direct.SettingsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SettingsRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SettingsRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SettingsRequest::InternalSwap(SettingsRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.settings_, other->_impl_.settings_);
}

::google::protobuf::Metadata SettingsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_direct_2eproto_getter, &descriptor_table_direct_2eproto_once,
      file_level_metadata_direct_2eproto[7]);
}
// ===================================================================

class SettingsResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<SettingsResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SettingsResponse, _impl_._has_bits_);
  static const ::direct::Settings& settings(const SettingsResponse* msg);
  static void set_has_settings(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::direct::Settings& SettingsResponse::_Internal::settings(const SettingsResponse* msg) {
  return *msg->_impl_.settings_;
}
SettingsResponse::SettingsResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:direct.SettingsResponse)
}
inline PROTOBUF_NDEBUG_INLINE SettingsResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SettingsResponse::SettingsResponse(
    ::google::protobuf::Arena* arena,
    const SettingsResponse& from)
    : ::google::protobuf::Message(arena) {
  SettingsResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.settings_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::direct::Settings>(arena, *from._impl_.settings_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:direct.SettingsResponse)
}
inline PROTOBUF_NDEBUG_INLINE SettingsResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SettingsResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.settings_ = {};
}
SettingsResponse::~SettingsResponse() {
  // @@protoc_insertion_point(destructor:direct.SettingsResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SettingsResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.settings_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SettingsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:direct.SettingsResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.settings_ != nullptr);
    _impl_.settings_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SettingsResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> SettingsResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SettingsResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SettingsResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .direct.Settings settings = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SettingsResponse, _impl_.settings_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .direct.Settings settings = 1;
    {PROTOBUF_FIELD_OFFSET(SettingsResponse, _impl_.settings_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::direct::Settings>()},
  }}, {{
  }},
};

::uint8_t* SettingsResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:direct.SettingsResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .direct.Settings settings = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::settings(this),
        _Internal::settings(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:direct.SettingsResponse)
  return target;
}

::size_t SettingsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:direct.SettingsResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .direct.Settings settings = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.settings_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SettingsResponse::_class_data_ = {
    SettingsResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SettingsResponse::GetClassData() const {
  return &_class_data_;
}

void SettingsResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SettingsResponse*>(&to_msg);
  auto& from = static_cast<const SettingsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:direct.SettingsResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_settings()->::direct::Settings::MergeFrom(
        from._internal_settings());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SettingsResponse::CopyFrom(const SettingsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:direct.SettingsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SettingsResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SettingsResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SettingsResponse::InternalSwap(SettingsResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.settings_, other->_impl_.settings_);
}

::google::protobuf::Metadata SettingsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_direct_2eproto_getter, &descriptor_table_direct_2eproto_once,
      file_level_metadata_direct_2eproto[8]);
}
// ===================================================================

class CostRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<CostRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CostRequest, _impl_._has_bits_);
  static void set_has_derivatives(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_internals(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

CostRequest::CostRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:direct.CostRequest)
}
CostRequest::CostRequest(
    ::google::protobuf::Arena* arena, const CostRequest& from)
    : CostRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE CostRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void CostRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, derivatives_),
           0,
           offsetof(Impl_, internals_) -
               offsetof(Impl_, derivatives_) +
               sizeof(Impl_::internals_));
}
CostRequest::~CostRequest() {
  // @@protoc_insertion_point(destructor:direct.CostRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CostRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void CostRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:direct.CostRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.derivatives_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.internals_) -
      reinterpret_cast<char*>(&_impl_.derivatives_)) + sizeof(_impl_.internals_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CostRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> CostRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CostRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CostRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional bool internals = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CostRequest, _impl_.internals_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(CostRequest, _impl_.internals_)}},
    // optional bool derivatives = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CostRequest, _impl_.derivatives_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(CostRequest, _impl_.derivatives_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional bool derivatives = 1;
    {PROTOBUF_FIELD_OFFSET(CostRequest, _impl_.derivatives_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool internals = 2;
    {PROTOBUF_FIELD_OFFSET(CostRequest, _impl_.internals_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* CostRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:direct.CostRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional bool derivatives = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1, this->_internal_derivatives(), target);
  }

  // optional bool internals = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        2, this->_internal_internals(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:direct.CostRequest)
  return target;
}

::size_t CostRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:direct.CostRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional bool derivatives = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 2;
    }

    // optional bool internals = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 2;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CostRequest::_class_data_ = {
    CostRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* CostRequest::GetClassData() const {
  return &_class_data_;
}

void CostRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CostRequest*>(&to_msg);
  auto& from = static_cast<const CostRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:direct.CostRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.derivatives_ = from._impl_.derivatives_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.internals_ = from._impl_.internals_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CostRequest::CopyFrom(const CostRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:direct.CostRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CostRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* CostRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void CostRequest::InternalSwap(CostRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CostRequest, _impl_.internals_)
      + sizeof(CostRequest::_impl_.internals_)
      - PROTOBUF_FIELD_OFFSET(CostRequest, _impl_.derivatives_)>(
          reinterpret_cast<char*>(&_impl_.derivatives_),
          reinterpret_cast<char*>(&other->_impl_.derivatives_));
}

::google::protobuf::Metadata CostRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_direct_2eproto_getter, &descriptor_table_direct_2eproto_once,
      file_level_metadata_direct_2eproto[9]);
}
// ===================================================================

class CostResponse::_Internal {
 public:
};

CostResponse::CostResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:direct.CostResponse)
}
inline PROTOBUF_NDEBUG_INLINE CostResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : gradient_{visibility, arena, from.gradient_},
        hessian_{visibility, arena, from.hessian_},
        residual_sensor_{visibility, arena, from.residual_sensor_},
        residual_force_{visibility, arena, from.residual_force_},
        jacobian_sensor_{visibility, arena, from.jacobian_sensor_},
        jacobian_force_{visibility, arena, from.jacobian_force_},
        norm_gradient_sensor_{visibility, arena, from.norm_gradient_sensor_},
        norm_gradient_force_{visibility, arena, from.norm_gradient_force_},
        norm_hessian_sensor_{visibility, arena, from.norm_hessian_sensor_},
        norm_hessian_force_{visibility, arena, from.norm_hessian_force_},
        _cached_size_{0} {}

CostResponse::CostResponse(
    ::google::protobuf::Arena* arena,
    const CostResponse& from)
    : ::google::protobuf::Message(arena) {
  CostResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, total_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, total_),
           offsetof(Impl_, nforce_) -
               offsetof(Impl_, total_) +
               sizeof(Impl_::nforce_));

  // @@protoc_insertion_point(copy_constructor:direct.CostResponse)
}
inline PROTOBUF_NDEBUG_INLINE CostResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : gradient_{visibility, arena},
        hessian_{visibility, arena},
        residual_sensor_{visibility, arena},
        residual_force_{visibility, arena},
        jacobian_sensor_{visibility, arena},
        jacobian_force_{visibility, arena},
        norm_gradient_sensor_{visibility, arena},
        norm_gradient_force_{visibility, arena},
        norm_hessian_sensor_{visibility, arena},
        norm_hessian_force_{visibility, arena},
        _cached_size_{0} {}

inline void CostResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, total_),
           0,
           offsetof(Impl_, nforce_) -
               offsetof(Impl_, total_) +
               sizeof(Impl_::nforce_));
}
CostResponse::~CostResponse() {
  // @@protoc_insertion_point(destructor:direct.CostResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CostResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void CostResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:direct.CostResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.gradient_.Clear();
  _impl_.hessian_.Clear();
  _impl_.residual_sensor_.Clear();
  _impl_.residual_force_.Clear();
  _impl_.jacobian_sensor_.Clear();
  _impl_.jacobian_force_.Clear();
  _impl_.norm_gradient_sensor_.Clear();
  _impl_.norm_gradient_force_.Clear();
  _impl_.norm_hessian_sensor_.Clear();
  _impl_.norm_hessian_force_.Clear();
  ::memset(&_impl_.total_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.nforce_) -
      reinterpret_cast<char*>(&_impl_.total_)) + sizeof(_impl_.nforce_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CostResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<5, 18, 0, 0, 2> CostResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    18, 248,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294705152,  // skipmap
    offsetof(decltype(_table_), field_entries),
    18,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CostResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // double total = 1;
    {::_pbi::TcParser::FastF64S1,
     {9, 63, 0, PROTOBUF_FIELD_OFFSET(CostResponse, _impl_.total_)}},
    // double sensor = 2;
    {::_pbi::TcParser::FastF64S1,
     {17, 63, 0, PROTOBUF_FIELD_OFFSET(CostResponse, _impl_.sensor_)}},
    // double force = 3;
    {::_pbi::TcParser::FastF64S1,
     {25, 63, 0, PROTOBUF_FIELD_OFFSET(CostResponse, _impl_.force_)}},
    // double parameter = 4;
    {::_pbi::TcParser::FastF64S1,
     {33, 63, 0, PROTOBUF_FIELD_OFFSET(CostResponse, _impl_.parameter_)}},
    // double initial = 5;
    {::_pbi::TcParser::FastF64S1,
     {41, 63, 0, PROTOBUF_FIELD_OFFSET(CostResponse, _impl_.initial_)}},
    // repeated double gradient = 6 [packed = true];
    {::_pbi::TcParser::FastF64P1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(CostResponse, _impl_.gradient_)}},
    // repeated double hessian = 7 [packed = true];
    {::_pbi::TcParser::FastF64P1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(CostResponse, _impl_.hessian_)}},
    // repeated double residual_sensor = 8 [packed = true];
    {::_pbi::TcParser::FastF64P1,
     {66, 63, 0, PROTOBUF_FIELD_OFFSET(CostResponse, _impl_.residual_sensor_)}},
    // repeated double residual_force = 9 [packed = true];
    {::_pbi::TcParser::FastF64P1,
     {74, 63, 0, PROTOBUF_FIELD_OFFSET(CostResponse, _impl_.residual_force_)}},
    // repeated double jacobian_sensor = 10 [packed = true];
    {::_pbi::TcParser::FastF64P1,
     {82, 63, 0, PROTOBUF_FIELD_OFFSET(CostResponse, _impl_.jacobian_sensor_)}},
    // repeated double jacobian_force = 11 [packed = true];
    {::_pbi::TcParser::FastF64P1,
     {90, 63, 0, PROTOBUF_FIELD_OFFSET(CostResponse, _impl_.jacobian_force_)}},
    // repeated double norm_gradient_sensor = 12 [packed = true];
    {::_pbi::TcParser::FastF64P1,
     {98, 63, 0, PROTOBUF_FIELD_OFFSET(CostResponse, _impl_.norm_gradient_sensor_)}},
    // repeated double norm_gradient_force = 13 [packed = true];
    {::_pbi::TcParser::FastF64P1,
     {106, 63, 0, PROTOBUF_FIELD_OFFSET(CostResponse, _impl_.norm_gradient_force_)}},
    // repeated double norm_hessian_sensor = 14 [packed = true];
    {::_pbi::TcParser::FastF64P1,
     {114, 63, 0, PROTOBUF_FIELD_OFFSET(CostResponse, _impl_.norm_hessian_sensor_)}},
    // repeated double norm_hessian_force = 15 [packed = true];
    {::_pbi::TcParser::FastF64P1,
     {122, 63, 0, PROTOBUF_FIELD_OFFSET(CostResponse, _impl_.norm_hessian_force_)}},
    // int32 nvar = 16;
    {::_pbi::TcParser::FastV32S2,
     {384, 63, 0, PROTOBUF_FIELD_OFFSET(CostResponse, _impl_.nvar_)}},
    // int32 nsensor = 17;
    {::_pbi::TcParser::FastV32S2,
     {392, 63, 0, PROTOBUF_FIELD_OFFSET(CostResponse, _impl_.nsensor_)}},
    // int32 nforce = 18;
    {::_pbi::TcParser::FastV32S2,
     {400, 63, 0, PROTOBUF_FIELD_OFFSET(CostResponse, _impl_.nforce_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // double total = 1;
    {PROTOBUF_FIELD_OFFSET(CostResponse, _impl_.total_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double sensor = 2;
    {PROTOBUF_FIELD_OFFSET(CostResponse, _impl_.sensor_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double force = 3;
    {PROTOBUF_FIELD_OFFSET(CostResponse, _impl_.force_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double parameter = 4;
    {PROTOBUF_FIELD_OFFSET(CostResponse, _impl_.parameter_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double initial = 5;
    {PROTOBUF_FIELD_OFFSET(CostResponse, _impl_.initial_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // repeated double gradient = 6 [packed = true];
    {PROTOBUF_FIELD_OFFSET(CostResponse, _impl_.gradient_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedDouble)},
    // repeated double hessian = 7 [packed = true];
    {PROTOBUF_FIELD_OFFSET(CostResponse, _impl_.hessian_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedDouble)},
    // repeated double residual_sensor = 8 [packed = true];
    {PROTOBUF_FIELD_OFFSET(CostResponse, _impl_.residual_sensor_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedDouble)},
    // repeated double residual_force = 9 [packed = true];
    {PROTOBUF_FIELD_OFFSET(CostResponse, _impl_.residual_force_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedDouble)},
    // repeated double jacobian_sensor = 10 [packed = true];
    {PROTOBUF_FIELD_OFFSET(CostResponse, _impl_.jacobian_sensor_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedDouble)},
    // repeated double jacobian_force = 11 [packed = true];
    {PROTOBUF_FIELD_OFFSET(CostResponse, _impl_.jacobian_force_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedDouble)},
    // repeated double norm_gradient_sensor = 12 [packed = true];
    {PROTOBUF_FIELD_OFFSET(CostResponse, _impl_.norm_gradient_sensor_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedDouble)},
    // repeated double norm_gradient_force = 13 [packed = true];
    {PROTOBUF_FIELD_OFFSET(CostResponse, _impl_.norm_gradient_force_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedDouble)},
    // repeated double norm_hessian_sensor = 14 [packed = true];
    {PROTOBUF_FIELD_OFFSET(CostResponse, _impl_.norm_hessian_sensor_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedDouble)},
    // repeated double norm_hessian_force = 15 [packed = true];
    {PROTOBUF_FIELD_OFFSET(CostResponse, _impl_.norm_hessian_force_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedDouble)},
    // int32 nvar = 16;
    {PROTOBUF_FIELD_OFFSET(CostResponse, _impl_.nvar_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 nsensor = 17;
    {PROTOBUF_FIELD_OFFSET(CostResponse, _impl_.nsensor_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 nforce = 18;
    {PROTOBUF_FIELD_OFFSET(CostResponse, _impl_.nforce_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* CostResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:direct.CostResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // double total = 1;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_total = this->_internal_total();
  ::uint64_t raw_total;
  memcpy(&raw_total, &tmp_total, sizeof(tmp_total));
  if (raw_total != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        1, this->_internal_total(), target);
  }

  // double sensor = 2;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_sensor = this->_internal_sensor();
  ::uint64_t raw_sensor;
  memcpy(&raw_sensor, &tmp_sensor, sizeof(tmp_sensor));
  if (raw_sensor != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        2, this->_internal_sensor(), target);
  }

  // double force = 3;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_force = this->_internal_force();
  ::uint64_t raw_force;
  memcpy(&raw_force, &tmp_force, sizeof(tmp_force));
  if (raw_force != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        3, this->_internal_force(), target);
  }

  // double parameter = 4;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_parameter = this->_internal_parameter();
  ::uint64_t raw_parameter;
  memcpy(&raw_parameter, &tmp_parameter, sizeof(tmp_parameter));
  if (raw_parameter != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        4, this->_internal_parameter(), target);
  }

  // double initial = 5;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_initial = this->_internal_initial();
  ::uint64_t raw_initial;
  memcpy(&raw_initial, &tmp_initial, sizeof(tmp_initial));
  if (raw_initial != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        5, this->_internal_initial(), target);
  }

  // repeated double gradient = 6 [packed = true];
  if (this->_internal_gradient_size() > 0) {
    target = stream->WriteFixedPacked(6, _internal_gradient(), target);
  }

  // repeated double hessian = 7 [packed = true];
  if (this->_internal_hessian_size() > 0) {
    target = stream->WriteFixedPacked(7, _internal_hessian(), target);
  }

  // repeated double residual_sensor = 8 [packed = true];
  if (this->_internal_residual_sensor_size() > 0) {
    target = stream->WriteFixedPacked(8, _internal_residual_sensor(), target);
  }

  // repeated double residual_force = 9 [packed = true];
  if (this->_internal_residual_force_size() > 0) {
    target = stream->WriteFixedPacked(9, _internal_residual_force(), target);
  }

  // repeated double jacobian_sensor = 10 [packed = true];
  if (this->_internal_jacobian_sensor_size() > 0) {
    target = stream->WriteFixedPacked(10, _internal_jacobian_sensor(), target);
  }

  // repeated double jacobian_force = 11 [packed = true];
  if (this->_internal_jacobian_force_size() > 0) {
    target = stream->WriteFixedPacked(11, _internal_jacobian_force(), target);
  }

  // repeated double norm_gradient_sensor = 12 [packed = true];
  if (this->_internal_norm_gradient_sensor_size() > 0) {
    target = stream->WriteFixedPacked(12, _internal_norm_gradient_sensor(), target);
  }

  // repeated double norm_gradient_force = 13 [packed = true];
  if (this->_internal_norm_gradient_force_size() > 0) {
    target = stream->WriteFixedPacked(13, _internal_norm_gradient_force(), target);
  }

  // repeated double norm_hessian_sensor = 14 [packed = true];
  if (this->_internal_norm_hessian_sensor_size() > 0) {
    target = stream->WriteFixedPacked(14, _internal_norm_hessian_sensor(), target);
  }

  // repeated double norm_hessian_force = 15 [packed = true];
  if (this->_internal_norm_hessian_force_size() > 0) {
    target = stream->WriteFixedPacked(15, _internal_norm_hessian_force(), target);
  }

  // int32 nvar = 16;
  if (this->_internal_nvar() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        16, this->_internal_nvar(), target);
  }

  // int32 nsensor = 17;
  if (this->_internal_nsensor() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        17, this->_internal_nsensor(), target);
  }

  // int32 nforce = 18;
  if (this->_internal_nforce() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        18, this->_internal_nforce(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:direct.CostResponse)
  return target;
}

::size_t CostResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:direct.CostResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated double gradient = 6 [packed = true];
  {
    std::size_t data_size = std::size_t{8} *
        ::_pbi::FromIntSize(this->_internal_gradient_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated double hessian = 7 [packed = true];
  {
    std::size_t data_size = std::size_t{8} *
        ::_pbi::FromIntSize(this->_internal_hessian_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated double residual_sensor = 8 [packed = true];
  {
    std::size_t data_size = std::size_t{8} *
        ::_pbi::FromIntSize(this->_internal_residual_sensor_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated double residual_force = 9 [packed = true];
  {
    std::size_t data_size = std::size_t{8} *
        ::_pbi::FromIntSize(this->_internal_residual_force_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated double jacobian_sensor = 10 [packed = true];
  {
    std::size_t data_size = std::size_t{8} *
        ::_pbi::FromIntSize(this->_internal_jacobian_sensor_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated double jacobian_force = 11 [packed = true];
  {
    std::size_t data_size = std::size_t{8} *
        ::_pbi::FromIntSize(this->_internal_jacobian_force_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated double norm_gradient_sensor = 12 [packed = true];
  {
    std::size_t data_size = std::size_t{8} *
        ::_pbi::FromIntSize(this->_internal_norm_gradient_sensor_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated double norm_gradient_force = 13 [packed = true];
  {
    std::size_t data_size = std::size_t{8} *
        ::_pbi::FromIntSize(this->_internal_norm_gradient_force_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated double norm_hessian_sensor = 14 [packed = true];
  {
    std::size_t data_size = std::size_t{8} *
        ::_pbi::FromIntSize(this->_internal_norm_hessian_sensor_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated double norm_hessian_force = 15 [packed = true];
  {
    std::size_t data_size = std::size_t{8} *
        ::_pbi::FromIntSize(this->_internal_norm_hessian_force_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // double total = 1;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_total = this->_internal_total();
  ::uint64_t raw_total;
  memcpy(&raw_total, &tmp_total, sizeof(tmp_total));
  if (raw_total != 0) {
    total_size += 9;
  }

  // double sensor = 2;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_sensor = this->_internal_sensor();
  ::uint64_t raw_sensor;
  memcpy(&raw_sensor, &tmp_sensor, sizeof(tmp_sensor));
  if (raw_sensor != 0) {
    total_size += 9;
  }

  // double force = 3;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_force = this->_internal_force();
  ::uint64_t raw_force;
  memcpy(&raw_force, &tmp_force, sizeof(tmp_force));
  if (raw_force != 0) {
    total_size += 9;
  }

  // double parameter = 4;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_parameter = this->_internal_parameter();
  ::uint64_t raw_parameter;
  memcpy(&raw_parameter, &tmp_parameter, sizeof(tmp_parameter));
  if (raw_parameter != 0) {
    total_size += 9;
  }

  // double initial = 5;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_initial = this->_internal_initial();
  ::uint64_t raw_initial;
  memcpy(&raw_initial, &tmp_initial, sizeof(tmp_initial));
  if (raw_initial != 0) {
    total_size += 9;
  }

  // int32 nvar = 16;
  if (this->_internal_nvar() != 0) {
    total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                    this->_internal_nvar());
  }

  // int32 nsensor = 17;
  if (this->_internal_nsensor() != 0) {
    total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                    this->_internal_nsensor());
  }

  // int32 nforce = 18;
  if (this->_internal_nforce() != 0) {
    total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                    this->_internal_nforce());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CostResponse::_class_data_ = {
    CostResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* CostResponse::GetClassData() const {
  return &_class_data_;
}

void CostResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CostResponse*>(&to_msg);
  auto& from = static_cast<const CostResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:direct.CostResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_gradient()->MergeFrom(from._internal_gradient());
  _this->_internal_mutable_hessian()->MergeFrom(from._internal_hessian());
  _this->_internal_mutable_residual_sensor()->MergeFrom(from._internal_residual_sensor());
  _this->_internal_mutable_residual_force()->MergeFrom(from._internal_residual_force());
  _this->_internal_mutable_jacobian_sensor()->MergeFrom(from._internal_jacobian_sensor());
  _this->_internal_mutable_jacobian_force()->MergeFrom(from._internal_jacobian_force());
  _this->_internal_mutable_norm_gradient_sensor()->MergeFrom(from._internal_norm_gradient_sensor());
  _this->_internal_mutable_norm_gradient_force()->MergeFrom(from._internal_norm_gradient_force());
  _this->_internal_mutable_norm_hessian_sensor()->MergeFrom(from._internal_norm_hessian_sensor());
  _this->_internal_mutable_norm_hessian_force()->MergeFrom(from._internal_norm_hessian_force());
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_total = from._internal_total();
  ::uint64_t raw_total;
  memcpy(&raw_total, &tmp_total, sizeof(tmp_total));
  if (raw_total != 0) {
    _this->_internal_set_total(from._internal_total());
  }
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_sensor = from._internal_sensor();
  ::uint64_t raw_sensor;
  memcpy(&raw_sensor, &tmp_sensor, sizeof(tmp_sensor));
  if (raw_sensor != 0) {
    _this->_internal_set_sensor(from._internal_sensor());
  }
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_force = from._internal_force();
  ::uint64_t raw_force;
  memcpy(&raw_force, &tmp_force, sizeof(tmp_force));
  if (raw_force != 0) {
    _this->_internal_set_force(from._internal_force());
  }
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_parameter = from._internal_parameter();
  ::uint64_t raw_parameter;
  memcpy(&raw_parameter, &tmp_parameter, sizeof(tmp_parameter));
  if (raw_parameter != 0) {
    _this->_internal_set_parameter(from._internal_parameter());
  }
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_initial = from._internal_initial();
  ::uint64_t raw_initial;
  memcpy(&raw_initial, &tmp_initial, sizeof(tmp_initial));
  if (raw_initial != 0) {
    _this->_internal_set_initial(from._internal_initial());
  }
  if (from._internal_nvar() != 0) {
    _this->_internal_set_nvar(from._internal_nvar());
  }
  if (from._internal_nsensor() != 0) {
    _this->_internal_set_nsensor(from._internal_nsensor());
  }
  if (from._internal_nforce() != 0) {
    _this->_internal_set_nforce(from._internal_nforce());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CostResponse::CopyFrom(const CostResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:direct.CostResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CostResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* CostResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void CostResponse::InternalSwap(CostResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.gradient_.InternalSwap(&other->_impl_.gradient_);
  _impl_.hessian_.InternalSwap(&other->_impl_.hessian_);
  _impl_.residual_sensor_.InternalSwap(&other->_impl_.residual_sensor_);
  _impl_.residual_force_.InternalSwap(&other->_impl_.residual_force_);
  _impl_.jacobian_sensor_.InternalSwap(&other->_impl_.jacobian_sensor_);
  _impl_.jacobian_force_.InternalSwap(&other->_impl_.jacobian_force_);
  _impl_.norm_gradient_sensor_.InternalSwap(&other->_impl_.norm_gradient_sensor_);
  _impl_.norm_gradient_force_.InternalSwap(&other->_impl_.norm_gradient_force_);
  _impl_.norm_hessian_sensor_.InternalSwap(&other->_impl_.norm_hessian_sensor_);
  _impl_.norm_hessian_force_.InternalSwap(&other->_impl_.norm_hessian_force_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CostResponse, _impl_.nforce_)
      + sizeof(CostResponse::_impl_.nforce_)
      - PROTOBUF_FIELD_OFFSET(CostResponse, _impl_.total_)>(
          reinterpret_cast<char*>(&_impl_.total_),
          reinterpret_cast<char*>(&other->_impl_.total_));
}

::google::protobuf::Metadata CostResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_direct_2eproto_getter, &descriptor_table_direct_2eproto_once,
      file_level_metadata_direct_2eproto[10]);
}
// ===================================================================

class Noise::_Internal {
 public:
};

Noise::Noise(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:direct.Noise)
}
inline PROTOBUF_NDEBUG_INLINE Noise::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : process_{visibility, arena, from.process_},
        sensor_{visibility, arena, from.sensor_},
        parameter_{visibility, arena, from.parameter_},
        _cached_size_{0} {}

Noise::Noise(
    ::google::protobuf::Arena* arena,
    const Noise& from)
    : ::google::protobuf::Message(arena) {
  Noise* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:direct.Noise)
}
inline PROTOBUF_NDEBUG_INLINE Noise::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : process_{visibility, arena},
        sensor_{visibility, arena},
        parameter_{visibility, arena},
        _cached_size_{0} {}

inline void Noise::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Noise::~Noise() {
  // @@protoc_insertion_point(destructor:direct.Noise)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Noise::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Noise::Clear() {
// @@protoc_insertion_point(message_clear_start:direct.Noise)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.process_.Clear();
  _impl_.sensor_.Clear();
  _impl_.parameter_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Noise::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> Noise::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Noise_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated double process = 1 [packed = true];
    {::_pbi::TcParser::FastF64P1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Noise, _impl_.process_)}},
    // repeated double sensor = 2 [packed = true];
    {::_pbi::TcParser::FastF64P1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Noise, _impl_.sensor_)}},
    // repeated double parameter = 3 [packed = true];
    {::_pbi::TcParser::FastF64P1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Noise, _impl_.parameter_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated double process = 1 [packed = true];
    {PROTOBUF_FIELD_OFFSET(Noise, _impl_.process_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedDouble)},
    // repeated double sensor = 2 [packed = true];
    {PROTOBUF_FIELD_OFFSET(Noise, _impl_.sensor_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedDouble)},
    // repeated double parameter = 3 [packed = true];
    {PROTOBUF_FIELD_OFFSET(Noise, _impl_.parameter_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedDouble)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* Noise::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:direct.Noise)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated double process = 1 [packed = true];
  if (this->_internal_process_size() > 0) {
    target = stream->WriteFixedPacked(1, _internal_process(), target);
  }

  // repeated double sensor = 2 [packed = true];
  if (this->_internal_sensor_size() > 0) {
    target = stream->WriteFixedPacked(2, _internal_sensor(), target);
  }

  // repeated double parameter = 3 [packed = true];
  if (this->_internal_parameter_size() > 0) {
    target = stream->WriteFixedPacked(3, _internal_parameter(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:direct.Noise)
  return target;
}

::size_t Noise::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:direct.Noise)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated double process = 1 [packed = true];
  {
    std::size_t data_size = std::size_t{8} *
        ::_pbi::FromIntSize(this->_internal_process_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated double sensor = 2 [packed = true];
  {
    std::size_t data_size = std::size_t{8} *
        ::_pbi::FromIntSize(this->_internal_sensor_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated double parameter = 3 [packed = true];
  {
    std::size_t data_size = std::size_t{8} *
        ::_pbi::FromIntSize(this->_internal_parameter_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Noise::_class_data_ = {
    Noise::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Noise::GetClassData() const {
  return &_class_data_;
}

void Noise::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Noise*>(&to_msg);
  auto& from = static_cast<const Noise&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:direct.Noise)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_process()->MergeFrom(from._internal_process());
  _this->_internal_mutable_sensor()->MergeFrom(from._internal_sensor());
  _this->_internal_mutable_parameter()->MergeFrom(from._internal_parameter());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Noise::CopyFrom(const Noise& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:direct.Noise)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Noise::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Noise::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Noise::InternalSwap(Noise* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.process_.InternalSwap(&other->_impl_.process_);
  _impl_.sensor_.InternalSwap(&other->_impl_.sensor_);
  _impl_.parameter_.InternalSwap(&other->_impl_.parameter_);
}

::google::protobuf::Metadata Noise::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_direct_2eproto_getter, &descriptor_table_direct_2eproto_once,
      file_level_metadata_direct_2eproto[11]);
}
// ===================================================================

class NoiseRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<NoiseRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(NoiseRequest, _impl_._has_bits_);
  static const ::direct::Noise& noise(const NoiseRequest* msg);
  static void set_has_noise(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::direct::Noise& NoiseRequest::_Internal::noise(const NoiseRequest* msg) {
  return *msg->_impl_.noise_;
}
NoiseRequest::NoiseRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:direct.NoiseRequest)
}
inline PROTOBUF_NDEBUG_INLINE NoiseRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

NoiseRequest::NoiseRequest(
    ::google::protobuf::Arena* arena,
    const NoiseRequest& from)
    : ::google::protobuf::Message(arena) {
  NoiseRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.noise_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::direct::Noise>(arena, *from._impl_.noise_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:direct.NoiseRequest)
}
inline PROTOBUF_NDEBUG_INLINE NoiseRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void NoiseRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.noise_ = {};
}
NoiseRequest::~NoiseRequest() {
  // @@protoc_insertion_point(destructor:direct.NoiseRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void NoiseRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.noise_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void NoiseRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:direct.NoiseRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.noise_ != nullptr);
    _impl_.noise_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* NoiseRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> NoiseRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(NoiseRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_NoiseRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional .direct.Noise noise = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(NoiseRequest, _impl_.noise_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .direct.Noise noise = 1;
    {PROTOBUF_FIELD_OFFSET(NoiseRequest, _impl_.noise_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::direct::Noise>()},
  }}, {{
  }},
};

::uint8_t* NoiseRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:direct.NoiseRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .direct.Noise noise = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::noise(this),
        _Internal::noise(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:direct.NoiseRequest)
  return target;
}

::size_t NoiseRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:direct.NoiseRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .direct.Noise noise = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.noise_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData NoiseRequest::_class_data_ = {
    NoiseRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* NoiseRequest::GetClassData() const {
  return &_class_data_;
}

void NoiseRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<NoiseRequest*>(&to_msg);
  auto& from = static_cast<const NoiseRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:direct.NoiseRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_noise()->::direct::Noise::MergeFrom(
        from._internal_noise());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NoiseRequest::CopyFrom(const NoiseRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:direct.NoiseRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool NoiseRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* NoiseRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void NoiseRequest::InternalSwap(NoiseRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.noise_, other->_impl_.noise_);
}

::google::protobuf::Metadata NoiseRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_direct_2eproto_getter, &descriptor_table_direct_2eproto_once,
      file_level_metadata_direct_2eproto[12]);
}
// ===================================================================

class NoiseResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<NoiseResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(NoiseResponse, _impl_._has_bits_);
  static const ::direct::Noise& noise(const NoiseResponse* msg);
  static void set_has_noise(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::direct::Noise& NoiseResponse::_Internal::noise(const NoiseResponse* msg) {
  return *msg->_impl_.noise_;
}
NoiseResponse::NoiseResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:direct.NoiseResponse)
}
inline PROTOBUF_NDEBUG_INLINE NoiseResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

NoiseResponse::NoiseResponse(
    ::google::protobuf::Arena* arena,
    const NoiseResponse& from)
    : ::google::protobuf::Message(arena) {
  NoiseResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.noise_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::direct::Noise>(arena, *from._impl_.noise_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:direct.NoiseResponse)
}
inline PROTOBUF_NDEBUG_INLINE NoiseResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void NoiseResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.noise_ = {};
}
NoiseResponse::~NoiseResponse() {
  // @@protoc_insertion_point(destructor:direct.NoiseResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void NoiseResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.noise_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void NoiseResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:direct.NoiseResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.noise_ != nullptr);
    _impl_.noise_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* NoiseResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> NoiseResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(NoiseResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_NoiseResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .direct.Noise noise = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(NoiseResponse, _impl_.noise_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .direct.Noise noise = 1;
    {PROTOBUF_FIELD_OFFSET(NoiseResponse, _impl_.noise_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::direct::Noise>()},
  }}, {{
  }},
};

::uint8_t* NoiseResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:direct.NoiseResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .direct.Noise noise = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::noise(this),
        _Internal::noise(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:direct.NoiseResponse)
  return target;
}

::size_t NoiseResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:direct.NoiseResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .direct.Noise noise = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.noise_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData NoiseResponse::_class_data_ = {
    NoiseResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* NoiseResponse::GetClassData() const {
  return &_class_data_;
}

void NoiseResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<NoiseResponse*>(&to_msg);
  auto& from = static_cast<const NoiseResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:direct.NoiseResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_noise()->::direct::Noise::MergeFrom(
        from._internal_noise());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NoiseResponse::CopyFrom(const NoiseResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:direct.NoiseResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool NoiseResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* NoiseResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void NoiseResponse::InternalSwap(NoiseResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.noise_, other->_impl_.noise_);
}

::google::protobuf::Metadata NoiseResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_direct_2eproto_getter, &descriptor_table_direct_2eproto_once,
      file_level_metadata_direct_2eproto[13]);
}
// ===================================================================

class ResetRequest::_Internal {
 public:
};

ResetRequest::ResetRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:direct.ResetRequest)
}
ResetRequest::ResetRequest(
    ::google::protobuf::Arena* arena,
    const ResetRequest& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  ResetRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:direct.ResetRequest)
}









::google::protobuf::Metadata ResetRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_direct_2eproto_getter, &descriptor_table_direct_2eproto_once,
      file_level_metadata_direct_2eproto[14]);
}
// ===================================================================

class ResetResponse::_Internal {
 public:
};

ResetResponse::ResetResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:direct.ResetResponse)
}
ResetResponse::ResetResponse(
    ::google::protobuf::Arena* arena,
    const ResetResponse& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  ResetResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:direct.ResetResponse)
}









::google::protobuf::Metadata ResetResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_direct_2eproto_getter, &descriptor_table_direct_2eproto_once,
      file_level_metadata_direct_2eproto[15]);
}
// ===================================================================

class OptimizeRequest::_Internal {
 public:
};

OptimizeRequest::OptimizeRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:direct.OptimizeRequest)
}
OptimizeRequest::OptimizeRequest(
    ::google::protobuf::Arena* arena,
    const OptimizeRequest& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  OptimizeRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:direct.OptimizeRequest)
}









::google::protobuf::Metadata OptimizeRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_direct_2eproto_getter, &descriptor_table_direct_2eproto_once,
      file_level_metadata_direct_2eproto[16]);
}
// ===================================================================

class OptimizeResponse::_Internal {
 public:
};

OptimizeResponse::OptimizeResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:direct.OptimizeResponse)
}
OptimizeResponse::OptimizeResponse(
    ::google::protobuf::Arena* arena,
    const OptimizeResponse& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  OptimizeResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:direct.OptimizeResponse)
}









::google::protobuf::Metadata OptimizeResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_direct_2eproto_getter, &descriptor_table_direct_2eproto_once,
      file_level_metadata_direct_2eproto[17]);
}
// ===================================================================

class Status::_Internal {
 public:
};

Status::Status(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:direct.Status)
}
Status::Status(
    ::google::protobuf::Arena* arena, const Status& from)
    : Status(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE Status::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Status::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, search_iterations_),
           0,
           offsetof(Impl_, solve_status_) -
               offsetof(Impl_, search_iterations_) +
               sizeof(Impl_::solve_status_));
}
Status::~Status() {
  // @@protoc_insertion_point(destructor:direct.Status)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Status::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Status::Clear() {
// @@protoc_insertion_point(message_clear_start:direct.Status)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.search_iterations_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.solve_status_) -
      reinterpret_cast<char*>(&_impl_.search_iterations_)) + sizeof(_impl_.solve_status_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Status::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 11, 0, 0, 2> Status::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    11, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294965248,  // skipmap
    offsetof(decltype(_table_), field_entries),
    11,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Status_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 search_iterations = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Status, _impl_.search_iterations_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Status, _impl_.search_iterations_)}},
    // int32 smoother_iterations = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Status, _impl_.smoother_iterations_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Status, _impl_.smoother_iterations_)}},
    // double step_size = 3;
    {::_pbi::TcParser::FastF64S1,
     {25, 63, 0, PROTOBUF_FIELD_OFFSET(Status, _impl_.step_size_)}},
    // double regularization = 4;
    {::_pbi::TcParser::FastF64S1,
     {33, 63, 0, PROTOBUF_FIELD_OFFSET(Status, _impl_.regularization_)}},
    // double gradient_norm = 5;
    {::_pbi::TcParser::FastF64S1,
     {41, 63, 0, PROTOBUF_FIELD_OFFSET(Status, _impl_.gradient_norm_)}},
    // double search_direction_norm = 6;
    {::_pbi::TcParser::FastF64S1,
     {49, 63, 0, PROTOBUF_FIELD_OFFSET(Status, _impl_.search_direction_norm_)}},
    // int32 solve_status = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Status, _impl_.solve_status_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(Status, _impl_.solve_status_)}},
    // double cost_difference = 8;
    {::_pbi::TcParser::FastF64S1,
     {65, 63, 0, PROTOBUF_FIELD_OFFSET(Status, _impl_.cost_difference_)}},
    // double improvement = 9;
    {::_pbi::TcParser::FastF64S1,
     {73, 63, 0, PROTOBUF_FIELD_OFFSET(Status, _impl_.improvement_)}},
    // double expected = 10;
    {::_pbi::TcParser::FastF64S1,
     {81, 63, 0, PROTOBUF_FIELD_OFFSET(Status, _impl_.expected_)}},
    // double reduction_ratio = 11;
    {::_pbi::TcParser::FastF64S1,
     {89, 63, 0, PROTOBUF_FIELD_OFFSET(Status, _impl_.reduction_ratio_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 search_iterations = 1;
    {PROTOBUF_FIELD_OFFSET(Status, _impl_.search_iterations_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 smoother_iterations = 2;
    {PROTOBUF_FIELD_OFFSET(Status, _impl_.smoother_iterations_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // double step_size = 3;
    {PROTOBUF_FIELD_OFFSET(Status, _impl_.step_size_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double regularization = 4;
    {PROTOBUF_FIELD_OFFSET(Status, _impl_.regularization_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double gradient_norm = 5;
    {PROTOBUF_FIELD_OFFSET(Status, _impl_.gradient_norm_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double search_direction_norm = 6;
    {PROTOBUF_FIELD_OFFSET(Status, _impl_.search_direction_norm_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // int32 solve_status = 7;
    {PROTOBUF_FIELD_OFFSET(Status, _impl_.solve_status_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // double cost_difference = 8;
    {PROTOBUF_FIELD_OFFSET(Status, _impl_.cost_difference_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double improvement = 9;
    {PROTOBUF_FIELD_OFFSET(Status, _impl_.improvement_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double expected = 10;
    {PROTOBUF_FIELD_OFFSET(Status, _impl_.expected_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double reduction_ratio = 11;
    {PROTOBUF_FIELD_OFFSET(Status, _impl_.reduction_ratio_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* Status::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:direct.Status)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 search_iterations = 1;
  if (this->_internal_search_iterations() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_search_iterations(), target);
  }

  // int32 smoother_iterations = 2;
  if (this->_internal_smoother_iterations() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_smoother_iterations(), target);
  }

  // double step_size = 3;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_step_size = this->_internal_step_size();
  ::uint64_t raw_step_size;
  memcpy(&raw_step_size, &tmp_step_size, sizeof(tmp_step_size));
  if (raw_step_size != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        3, this->_internal_step_size(), target);
  }

  // double regularization = 4;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_regularization = this->_internal_regularization();
  ::uint64_t raw_regularization;
  memcpy(&raw_regularization, &tmp_regularization, sizeof(tmp_regularization));
  if (raw_regularization != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        4, this->_internal_regularization(), target);
  }

  // double gradient_norm = 5;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_gradient_norm = this->_internal_gradient_norm();
  ::uint64_t raw_gradient_norm;
  memcpy(&raw_gradient_norm, &tmp_gradient_norm, sizeof(tmp_gradient_norm));
  if (raw_gradient_norm != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        5, this->_internal_gradient_norm(), target);
  }

  // double search_direction_norm = 6;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_search_direction_norm = this->_internal_search_direction_norm();
  ::uint64_t raw_search_direction_norm;
  memcpy(&raw_search_direction_norm, &tmp_search_direction_norm, sizeof(tmp_search_direction_norm));
  if (raw_search_direction_norm != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        6, this->_internal_search_direction_norm(), target);
  }

  // int32 solve_status = 7;
  if (this->_internal_solve_status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<7>(
            stream, this->_internal_solve_status(), target);
  }

  // double cost_difference = 8;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_cost_difference = this->_internal_cost_difference();
  ::uint64_t raw_cost_difference;
  memcpy(&raw_cost_difference, &tmp_cost_difference, sizeof(tmp_cost_difference));
  if (raw_cost_difference != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        8, this->_internal_cost_difference(), target);
  }

  // double improvement = 9;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_improvement = this->_internal_improvement();
  ::uint64_t raw_improvement;
  memcpy(&raw_improvement, &tmp_improvement, sizeof(tmp_improvement));
  if (raw_improvement != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        9, this->_internal_improvement(), target);
  }

  // double expected = 10;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_expected = this->_internal_expected();
  ::uint64_t raw_expected;
  memcpy(&raw_expected, &tmp_expected, sizeof(tmp_expected));
  if (raw_expected != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        10, this->_internal_expected(), target);
  }

  // double reduction_ratio = 11;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_reduction_ratio = this->_internal_reduction_ratio();
  ::uint64_t raw_reduction_ratio;
  memcpy(&raw_reduction_ratio, &tmp_reduction_ratio, sizeof(tmp_reduction_ratio));
  if (raw_reduction_ratio != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        11, this->_internal_reduction_ratio(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:direct.Status)
  return target;
}

::size_t Status::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:direct.Status)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 search_iterations = 1;
  if (this->_internal_search_iterations() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_search_iterations());
  }

  // int32 smoother_iterations = 2;
  if (this->_internal_smoother_iterations() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_smoother_iterations());
  }

  // double step_size = 3;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_step_size = this->_internal_step_size();
  ::uint64_t raw_step_size;
  memcpy(&raw_step_size, &tmp_step_size, sizeof(tmp_step_size));
  if (raw_step_size != 0) {
    total_size += 9;
  }

  // double regularization = 4;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_regularization = this->_internal_regularization();
  ::uint64_t raw_regularization;
  memcpy(&raw_regularization, &tmp_regularization, sizeof(tmp_regularization));
  if (raw_regularization != 0) {
    total_size += 9;
  }

  // double gradient_norm = 5;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_gradient_norm = this->_internal_gradient_norm();
  ::uint64_t raw_gradient_norm;
  memcpy(&raw_gradient_norm, &tmp_gradient_norm, sizeof(tmp_gradient_norm));
  if (raw_gradient_norm != 0) {
    total_size += 9;
  }

  // double search_direction_norm = 6;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_search_direction_norm = this->_internal_search_direction_norm();
  ::uint64_t raw_search_direction_norm;
  memcpy(&raw_search_direction_norm, &tmp_search_direction_norm, sizeof(tmp_search_direction_norm));
  if (raw_search_direction_norm != 0) {
    total_size += 9;
  }

  // double cost_difference = 8;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_cost_difference = this->_internal_cost_difference();
  ::uint64_t raw_cost_difference;
  memcpy(&raw_cost_difference, &tmp_cost_difference, sizeof(tmp_cost_difference));
  if (raw_cost_difference != 0) {
    total_size += 9;
  }

  // double improvement = 9;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_improvement = this->_internal_improvement();
  ::uint64_t raw_improvement;
  memcpy(&raw_improvement, &tmp_improvement, sizeof(tmp_improvement));
  if (raw_improvement != 0) {
    total_size += 9;
  }

  // double expected = 10;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_expected = this->_internal_expected();
  ::uint64_t raw_expected;
  memcpy(&raw_expected, &tmp_expected, sizeof(tmp_expected));
  if (raw_expected != 0) {
    total_size += 9;
  }

  // double reduction_ratio = 11;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_reduction_ratio = this->_internal_reduction_ratio();
  ::uint64_t raw_reduction_ratio;
  memcpy(&raw_reduction_ratio, &tmp_reduction_ratio, sizeof(tmp_reduction_ratio));
  if (raw_reduction_ratio != 0) {
    total_size += 9;
  }

  // int32 solve_status = 7;
  if (this->_internal_solve_status() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_solve_status());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Status::_class_data_ = {
    Status::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Status::GetClassData() const {
  return &_class_data_;
}

void Status::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Status*>(&to_msg);
  auto& from = static_cast<const Status&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:direct.Status)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_search_iterations() != 0) {
    _this->_internal_set_search_iterations(from._internal_search_iterations());
  }
  if (from._internal_smoother_iterations() != 0) {
    _this->_internal_set_smoother_iterations(from._internal_smoother_iterations());
  }
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_step_size = from._internal_step_size();
  ::uint64_t raw_step_size;
  memcpy(&raw_step_size, &tmp_step_size, sizeof(tmp_step_size));
  if (raw_step_size != 0) {
    _this->_internal_set_step_size(from._internal_step_size());
  }
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_regularization = from._internal_regularization();
  ::uint64_t raw_regularization;
  memcpy(&raw_regularization, &tmp_regularization, sizeof(tmp_regularization));
  if (raw_regularization != 0) {
    _this->_internal_set_regularization(from._internal_regularization());
  }
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_gradient_norm = from._internal_gradient_norm();
  ::uint64_t raw_gradient_norm;
  memcpy(&raw_gradient_norm, &tmp_gradient_norm, sizeof(tmp_gradient_norm));
  if (raw_gradient_norm != 0) {
    _this->_internal_set_gradient_norm(from._internal_gradient_norm());
  }
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_search_direction_norm = from._internal_search_direction_norm();
  ::uint64_t raw_search_direction_norm;
  memcpy(&raw_search_direction_norm, &tmp_search_direction_norm, sizeof(tmp_search_direction_norm));
  if (raw_search_direction_norm != 0) {
    _this->_internal_set_search_direction_norm(from._internal_search_direction_norm());
  }
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_cost_difference = from._internal_cost_difference();
  ::uint64_t raw_cost_difference;
  memcpy(&raw_cost_difference, &tmp_cost_difference, sizeof(tmp_cost_difference));
  if (raw_cost_difference != 0) {
    _this->_internal_set_cost_difference(from._internal_cost_difference());
  }
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_improvement = from._internal_improvement();
  ::uint64_t raw_improvement;
  memcpy(&raw_improvement, &tmp_improvement, sizeof(tmp_improvement));
  if (raw_improvement != 0) {
    _this->_internal_set_improvement(from._internal_improvement());
  }
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_expected = from._internal_expected();
  ::uint64_t raw_expected;
  memcpy(&raw_expected, &tmp_expected, sizeof(tmp_expected));
  if (raw_expected != 0) {
    _this->_internal_set_expected(from._internal_expected());
  }
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_reduction_ratio = from._internal_reduction_ratio();
  ::uint64_t raw_reduction_ratio;
  memcpy(&raw_reduction_ratio, &tmp_reduction_ratio, sizeof(tmp_reduction_ratio));
  if (raw_reduction_ratio != 0) {
    _this->_internal_set_reduction_ratio(from._internal_reduction_ratio());
  }
  if (from._internal_solve_status() != 0) {
    _this->_internal_set_solve_status(from._internal_solve_status());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Status::CopyFrom(const Status& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:direct.Status)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Status::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Status::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Status::InternalSwap(Status* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Status, _impl_.solve_status_)
      + sizeof(Status::_impl_.solve_status_)
      - PROTOBUF_FIELD_OFFSET(Status, _impl_.search_iterations_)>(
          reinterpret_cast<char*>(&_impl_.search_iterations_),
          reinterpret_cast<char*>(&other->_impl_.search_iterations_));
}

::google::protobuf::Metadata Status::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_direct_2eproto_getter, &descriptor_table_direct_2eproto_once,
      file_level_metadata_direct_2eproto[18]);
}
// ===================================================================

class StatusRequest::_Internal {
 public:
};

StatusRequest::StatusRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:direct.StatusRequest)
}
StatusRequest::StatusRequest(
    ::google::protobuf::Arena* arena,
    const StatusRequest& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  StatusRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:direct.StatusRequest)
}









::google::protobuf::Metadata StatusRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_direct_2eproto_getter, &descriptor_table_direct_2eproto_once,
      file_level_metadata_direct_2eproto[19]);
}
// ===================================================================

class StatusResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<StatusResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(StatusResponse, _impl_._has_bits_);
  static const ::direct::Status& status(const StatusResponse* msg);
  static void set_has_status(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::direct::Status& StatusResponse::_Internal::status(const StatusResponse* msg) {
  return *msg->_impl_.status_;
}
StatusResponse::StatusResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:direct.StatusResponse)
}
inline PROTOBUF_NDEBUG_INLINE StatusResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

StatusResponse::StatusResponse(
    ::google::protobuf::Arena* arena,
    const StatusResponse& from)
    : ::google::protobuf::Message(arena) {
  StatusResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.status_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::direct::Status>(arena, *from._impl_.status_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:direct.StatusResponse)
}
inline PROTOBUF_NDEBUG_INLINE StatusResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void StatusResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.status_ = {};
}
StatusResponse::~StatusResponse() {
  // @@protoc_insertion_point(destructor:direct.StatusResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void StatusResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.status_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void StatusResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:direct.StatusResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.status_ != nullptr);
    _impl_.status_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* StatusResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> StatusResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(StatusResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_StatusResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .direct.Status status = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(StatusResponse, _impl_.status_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .direct.Status status = 1;
    {PROTOBUF_FIELD_OFFSET(StatusResponse, _impl_.status_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::direct::Status>()},
  }}, {{
  }},
};

::uint8_t* StatusResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:direct.StatusResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .direct.Status status = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::status(this),
        _Internal::status(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:direct.StatusResponse)
  return target;
}

::size_t StatusResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:direct.StatusResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .direct.Status status = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.status_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData StatusResponse::_class_data_ = {
    StatusResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* StatusResponse::GetClassData() const {
  return &_class_data_;
}

void StatusResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<StatusResponse*>(&to_msg);
  auto& from = static_cast<const StatusResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:direct.StatusResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_status()->::direct::Status::MergeFrom(
        from._internal_status());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void StatusResponse::CopyFrom(const StatusResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:direct.StatusResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool StatusResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* StatusResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void StatusResponse::InternalSwap(StatusResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.status_, other->_impl_.status_);
}

::google::protobuf::Metadata StatusResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_direct_2eproto_getter, &descriptor_table_direct_2eproto_once,
      file_level_metadata_direct_2eproto[20]);
}
// ===================================================================

class SensorInfoRequest::_Internal {
 public:
};

SensorInfoRequest::SensorInfoRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:direct.SensorInfoRequest)
}
SensorInfoRequest::SensorInfoRequest(
    ::google::protobuf::Arena* arena,
    const SensorInfoRequest& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  SensorInfoRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:direct.SensorInfoRequest)
}









::google::protobuf::Metadata SensorInfoRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_direct_2eproto_getter, &descriptor_table_direct_2eproto_once,
      file_level_metadata_direct_2eproto[21]);
}
// ===================================================================

class SensorInfoResponse::_Internal {
 public:
};

SensorInfoResponse::SensorInfoResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:direct.SensorInfoResponse)
}
SensorInfoResponse::SensorInfoResponse(
    ::google::protobuf::Arena* arena, const SensorInfoResponse& from)
    : SensorInfoResponse(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE SensorInfoResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SensorInfoResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, start_index_),
           0,
           offsetof(Impl_, dim_measurements_) -
               offsetof(Impl_, start_index_) +
               sizeof(Impl_::dim_measurements_));
}
SensorInfoResponse::~SensorInfoResponse() {
  // @@protoc_insertion_point(destructor:direct.SensorInfoResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SensorInfoResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SensorInfoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:direct.SensorInfoResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.start_index_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.dim_measurements_) -
      reinterpret_cast<char*>(&_impl_.start_index_)) + sizeof(_impl_.dim_measurements_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SensorInfoResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> SensorInfoResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SensorInfoResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 start_index = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SensorInfoResponse, _impl_.start_index_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(SensorInfoResponse, _impl_.start_index_)}},
    // int32 num_measurements = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SensorInfoResponse, _impl_.num_measurements_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(SensorInfoResponse, _impl_.num_measurements_)}},
    // int32 dim_measurements = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SensorInfoResponse, _impl_.dim_measurements_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(SensorInfoResponse, _impl_.dim_measurements_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 start_index = 1;
    {PROTOBUF_FIELD_OFFSET(SensorInfoResponse, _impl_.start_index_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 num_measurements = 2;
    {PROTOBUF_FIELD_OFFSET(SensorInfoResponse, _impl_.num_measurements_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 dim_measurements = 3;
    {PROTOBUF_FIELD_OFFSET(SensorInfoResponse, _impl_.dim_measurements_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* SensorInfoResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:direct.SensorInfoResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 start_index = 1;
  if (this->_internal_start_index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_start_index(), target);
  }

  // int32 num_measurements = 2;
  if (this->_internal_num_measurements() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_num_measurements(), target);
  }

  // int32 dim_measurements = 3;
  if (this->_internal_dim_measurements() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_dim_measurements(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:direct.SensorInfoResponse)
  return target;
}

::size_t SensorInfoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:direct.SensorInfoResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 start_index = 1;
  if (this->_internal_start_index() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_start_index());
  }

  // int32 num_measurements = 2;
  if (this->_internal_num_measurements() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_num_measurements());
  }

  // int32 dim_measurements = 3;
  if (this->_internal_dim_measurements() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_dim_measurements());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SensorInfoResponse::_class_data_ = {
    SensorInfoResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SensorInfoResponse::GetClassData() const {
  return &_class_data_;
}

void SensorInfoResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SensorInfoResponse*>(&to_msg);
  auto& from = static_cast<const SensorInfoResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:direct.SensorInfoResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_start_index() != 0) {
    _this->_internal_set_start_index(from._internal_start_index());
  }
  if (from._internal_num_measurements() != 0) {
    _this->_internal_set_num_measurements(from._internal_num_measurements());
  }
  if (from._internal_dim_measurements() != 0) {
    _this->_internal_set_dim_measurements(from._internal_dim_measurements());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SensorInfoResponse::CopyFrom(const SensorInfoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:direct.SensorInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SensorInfoResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SensorInfoResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SensorInfoResponse::InternalSwap(SensorInfoResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SensorInfoResponse, _impl_.dim_measurements_)
      + sizeof(SensorInfoResponse::_impl_.dim_measurements_)
      - PROTOBUF_FIELD_OFFSET(SensorInfoResponse, _impl_.start_index_)>(
          reinterpret_cast<char*>(&_impl_.start_index_),
          reinterpret_cast<char*>(&other->_impl_.start_index_));
}

::google::protobuf::Metadata SensorInfoResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_direct_2eproto_getter, &descriptor_table_direct_2eproto_once,
      file_level_metadata_direct_2eproto[22]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace direct
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
