// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: filter.proto

#include "filter.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace filter {
      template <typename>
PROTOBUF_CONSTEXPR UpdateResponse::UpdateResponse(::_pbi::ConstantInitialized) {}
struct UpdateResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateResponseDefaultTypeInternal() {}
  union {
    UpdateResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateResponseDefaultTypeInternal _UpdateResponse_default_instance_;

inline constexpr UpdateRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        ctrl_{},
        sensor_{},
        mode_{0} {}

template <typename>
PROTOBUF_CONSTEXPR UpdateRequest::UpdateRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct UpdateRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateRequestDefaultTypeInternal() {}
  union {
    UpdateRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateRequestDefaultTypeInternal _UpdateRequest_default_instance_;

inline constexpr State::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        state_{},
        qfrc_{},
        time_{0} {}

template <typename>
PROTOBUF_CONSTEXPR State::State(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct StateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StateDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StateDefaultTypeInternal() {}
  union {
    State _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StateDefaultTypeInternal _State_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR ResetResponse::ResetResponse(::_pbi::ConstantInitialized) {}
struct ResetResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ResetResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ResetResponseDefaultTypeInternal() {}
  union {
    ResetResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ResetResponseDefaultTypeInternal _ResetResponse_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR ResetRequest::ResetRequest(::_pbi::ConstantInitialized) {}
struct ResetRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ResetRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ResetRequestDefaultTypeInternal() {}
  union {
    ResetRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ResetRequestDefaultTypeInternal _ResetRequest_default_instance_;

inline constexpr Noise::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : process_{},
        sensor_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Noise::Noise(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct NoiseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NoiseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NoiseDefaultTypeInternal() {}
  union {
    Noise _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NoiseDefaultTypeInternal _Noise_default_instance_;

inline constexpr MjModel::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        mjb_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        xml_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR MjModel::MjModel(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct MjModelDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MjModelDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MjModelDefaultTypeInternal() {}
  union {
    MjModel _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MjModelDefaultTypeInternal _MjModel_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR InitResponse::InitResponse(::_pbi::ConstantInitialized) {}
struct InitResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InitResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~InitResponseDefaultTypeInternal() {}
  union {
    InitResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InitResponseDefaultTypeInternal _InitResponse_default_instance_;

inline constexpr Covariance::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        covariance_{},
        dimension_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Covariance::Covariance(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CovarianceDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CovarianceDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CovarianceDefaultTypeInternal() {}
  union {
    Covariance _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CovarianceDefaultTypeInternal _Covariance_default_instance_;

inline constexpr StateResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        state_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR StateResponse::StateResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct StateResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StateResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StateResponseDefaultTypeInternal() {}
  union {
    StateResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StateResponseDefaultTypeInternal _StateResponse_default_instance_;

inline constexpr StateRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        state_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR StateRequest::StateRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct StateRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StateRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StateRequestDefaultTypeInternal() {}
  union {
    StateRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StateRequestDefaultTypeInternal _StateRequest_default_instance_;

inline constexpr NoiseResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        noise_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR NoiseResponse::NoiseResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct NoiseResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NoiseResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NoiseResponseDefaultTypeInternal() {}
  union {
    NoiseResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NoiseResponseDefaultTypeInternal _NoiseResponse_default_instance_;

inline constexpr NoiseRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        noise_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR NoiseRequest::NoiseRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct NoiseRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NoiseRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NoiseRequestDefaultTypeInternal() {}
  union {
    NoiseRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NoiseRequestDefaultTypeInternal _NoiseRequest_default_instance_;

inline constexpr InitRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        model_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR InitRequest::InitRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct InitRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InitRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~InitRequestDefaultTypeInternal() {}
  union {
    InitRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InitRequestDefaultTypeInternal _InitRequest_default_instance_;

inline constexpr CovarianceResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        covariance_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR CovarianceResponse::CovarianceResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CovarianceResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CovarianceResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CovarianceResponseDefaultTypeInternal() {}
  union {
    CovarianceResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CovarianceResponseDefaultTypeInternal _CovarianceResponse_default_instance_;

inline constexpr CovarianceRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        covariance_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR CovarianceRequest::CovarianceRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CovarianceRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CovarianceRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CovarianceRequestDefaultTypeInternal() {}
  union {
    CovarianceRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CovarianceRequestDefaultTypeInternal _CovarianceRequest_default_instance_;
}  // namespace filter
static ::_pb::Metadata file_level_metadata_filter_2eproto[16];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_filter_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_filter_2eproto = nullptr;
const ::uint32_t TableStruct_filter_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    PROTOBUF_FIELD_OFFSET(::filter::MjModel, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::filter::MjModel, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::filter::MjModel, _impl_.mjb_),
    PROTOBUF_FIELD_OFFSET(::filter::MjModel, _impl_.xml_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::filter::InitRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::filter::InitRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::filter::InitRequest, _impl_.model_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::filter::InitResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::filter::ResetRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::filter::ResetResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::filter::UpdateRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::filter::UpdateRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::filter::UpdateRequest, _impl_.ctrl_),
    PROTOBUF_FIELD_OFFSET(::filter::UpdateRequest, _impl_.sensor_),
    PROTOBUF_FIELD_OFFSET(::filter::UpdateRequest, _impl_.mode_),
    ~0u,
    ~0u,
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::filter::UpdateResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::filter::State, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::filter::State, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::filter::State, _impl_.state_),
    PROTOBUF_FIELD_OFFSET(::filter::State, _impl_.time_),
    PROTOBUF_FIELD_OFFSET(::filter::State, _impl_.qfrc_),
    ~0u,
    0,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::filter::StateRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::filter::StateRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::filter::StateRequest, _impl_.state_),
    0,
    PROTOBUF_FIELD_OFFSET(::filter::StateResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::filter::StateResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::filter::StateResponse, _impl_.state_),
    0,
    PROTOBUF_FIELD_OFFSET(::filter::Covariance, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::filter::Covariance, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::filter::Covariance, _impl_.covariance_),
    PROTOBUF_FIELD_OFFSET(::filter::Covariance, _impl_.dimension_),
    ~0u,
    0,
    PROTOBUF_FIELD_OFFSET(::filter::CovarianceRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::filter::CovarianceRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::filter::CovarianceRequest, _impl_.covariance_),
    0,
    PROTOBUF_FIELD_OFFSET(::filter::CovarianceResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::filter::CovarianceResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::filter::CovarianceResponse, _impl_.covariance_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::filter::Noise, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::filter::Noise, _impl_.process_),
    PROTOBUF_FIELD_OFFSET(::filter::Noise, _impl_.sensor_),
    PROTOBUF_FIELD_OFFSET(::filter::NoiseRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::filter::NoiseRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::filter::NoiseRequest, _impl_.noise_),
    0,
    PROTOBUF_FIELD_OFFSET(::filter::NoiseResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::filter::NoiseResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::filter::NoiseResponse, _impl_.noise_),
    0,
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, 10, -1, sizeof(::filter::MjModel)},
        {12, 21, -1, sizeof(::filter::InitRequest)},
        {22, -1, -1, sizeof(::filter::InitResponse)},
        {30, -1, -1, sizeof(::filter::ResetRequest)},
        {38, -1, -1, sizeof(::filter::ResetResponse)},
        {46, 57, -1, sizeof(::filter::UpdateRequest)},
        {60, -1, -1, sizeof(::filter::UpdateResponse)},
        {68, 79, -1, sizeof(::filter::State)},
        {82, 91, -1, sizeof(::filter::StateRequest)},
        {92, 101, -1, sizeof(::filter::StateResponse)},
        {102, 112, -1, sizeof(::filter::Covariance)},
        {114, 123, -1, sizeof(::filter::CovarianceRequest)},
        {124, 133, -1, sizeof(::filter::CovarianceResponse)},
        {134, -1, -1, sizeof(::filter::Noise)},
        {144, 153, -1, sizeof(::filter::NoiseRequest)},
        {154, 163, -1, sizeof(::filter::NoiseResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::filter::_MjModel_default_instance_._instance,
    &::filter::_InitRequest_default_instance_._instance,
    &::filter::_InitResponse_default_instance_._instance,
    &::filter::_ResetRequest_default_instance_._instance,
    &::filter::_ResetResponse_default_instance_._instance,
    &::filter::_UpdateRequest_default_instance_._instance,
    &::filter::_UpdateResponse_default_instance_._instance,
    &::filter::_State_default_instance_._instance,
    &::filter::_StateRequest_default_instance_._instance,
    &::filter::_StateResponse_default_instance_._instance,
    &::filter::_Covariance_default_instance_._instance,
    &::filter::_CovarianceRequest_default_instance_._instance,
    &::filter::_CovarianceResponse_default_instance_._instance,
    &::filter::_Noise_default_instance_._instance,
    &::filter::_NoiseRequest_default_instance_._instance,
    &::filter::_NoiseResponse_default_instance_._instance,
};
const char descriptor_table_protodef_filter_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\014filter.proto\022\006filter\"=\n\007MjModel\022\020\n\003mjb"
    "\030\001 \001(\014H\000\210\001\001\022\020\n\003xml\030\002 \001(\tH\001\210\001\001B\006\n\004_mjbB\006\n"
    "\004_xml\"<\n\013InitRequest\022#\n\005model\030\001 \001(\0132\017.fi"
    "lter.MjModelH\000\210\001\001B\010\n\006_model\"\016\n\014InitRespo"
    "nse\"\016\n\014ResetRequest\"\017\n\rResetResponse\"Q\n\r"
    "UpdateRequest\022\020\n\004ctrl\030\001 \003(\001B\002\020\001\022\022\n\006senso"
    "r\030\002 \003(\001B\002\020\001\022\021\n\004mode\030\003 \001(\005H\000\210\001\001B\007\n\005_mode\""
    "\020\n\016UpdateResponse\"H\n\005State\022\021\n\005state\030\001 \003("
    "\001B\002\020\001\022\021\n\004time\030\002 \001(\001H\000\210\001\001\022\020\n\004qfrc\030\003 \003(\001B\002"
    "\020\001B\007\n\005_time\",\n\014StateRequest\022\034\n\005state\030\001 \001"
    "(\0132\r.filter.State\"-\n\rStateResponse\022\034\n\005st"
    "ate\030\001 \001(\0132\r.filter.State\"J\n\nCovariance\022\026"
    "\n\ncovariance\030\001 \003(\001B\002\020\001\022\026\n\tdimension\030\002 \001("
    "\005H\000\210\001\001B\014\n\n_dimension\";\n\021CovarianceReques"
    "t\022&\n\ncovariance\030\001 \001(\0132\022.filter.Covarianc"
    "e\"<\n\022CovarianceResponse\022&\n\ncovariance\030\001 "
    "\001(\0132\022.filter.Covariance\"0\n\005Noise\022\023\n\007proc"
    "ess\030\001 \003(\001B\002\020\001\022\022\n\006sensor\030\002 \003(\001B\002\020\001\",\n\014Noi"
    "seRequest\022\034\n\005noise\030\001 \001(\0132\r.filter.Noise\""
    "-\n\rNoiseResponse\022\034\n\005noise\030\001 \001(\0132\r.filter"
    ".Noise2\344\002\n\017StateEstimation\0221\n\004Init\022\023.fil"
    "ter.InitRequest\032\024.filter.InitResponse\0224\n"
    "\005Reset\022\024.filter.ResetRequest\032\025.filter.Re"
    "setResponse\0227\n\006Update\022\025.filter.UpdateReq"
    "uest\032\026.filter.UpdateResponse\0224\n\005State\022\024."
    "filter.StateRequest\032\025.filter.StateRespon"
    "se\022C\n\nCovariance\022\031.filter.CovarianceRequ"
    "est\032\032.filter.CovarianceResponse\0224\n\005Noise"
    "\022\024.filter.NoiseRequest\032\025.filter.NoiseRes"
    "ponseb\006proto3"
};
static ::absl::once_flag descriptor_table_filter_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_filter_2eproto = {
    false,
    false,
    1173,
    descriptor_table_protodef_filter_2eproto,
    "filter.proto",
    &descriptor_table_filter_2eproto_once,
    nullptr,
    0,
    16,
    schemas,
    file_default_instances,
    TableStruct_filter_2eproto::offsets,
    file_level_metadata_filter_2eproto,
    file_level_enum_descriptors_filter_2eproto,
    file_level_service_descriptors_filter_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_filter_2eproto_getter() {
  return &descriptor_table_filter_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_filter_2eproto(&descriptor_table_filter_2eproto);
namespace filter {
// ===================================================================

class MjModel::_Internal {
 public:
  using HasBits = decltype(std::declval<MjModel>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(MjModel, _impl_._has_bits_);
  static void set_has_mjb(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_xml(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

MjModel::MjModel(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:filter.MjModel)
}
inline PROTOBUF_NDEBUG_INLINE MjModel::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        mjb_(arena, from.mjb_),
        xml_(arena, from.xml_) {}

MjModel::MjModel(
    ::google::protobuf::Arena* arena,
    const MjModel& from)
    : ::google::protobuf::Message(arena) {
  MjModel* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:filter.MjModel)
}
inline PROTOBUF_NDEBUG_INLINE MjModel::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        mjb_(arena),
        xml_(arena) {}

inline void MjModel::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
MjModel::~MjModel() {
  // @@protoc_insertion_point(destructor:filter.MjModel)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void MjModel::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.mjb_.Destroy();
  _impl_.xml_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void MjModel::Clear() {
// @@protoc_insertion_point(message_clear_start:filter.MjModel)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.mjb_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.xml_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* MjModel::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 26, 2> MjModel::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(MjModel, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_MjModel_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional string xml = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(MjModel, _impl_.xml_)}},
    // optional bytes mjb = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(MjModel, _impl_.mjb_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional bytes mjb = 1;
    {PROTOBUF_FIELD_OFFSET(MjModel, _impl_.mjb_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // optional string xml = 2;
    {PROTOBUF_FIELD_OFFSET(MjModel, _impl_.xml_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\16\0\3\0\0\0\0\0"
    "filter.MjModel"
    "xml"
  }},
};

::uint8_t* MjModel::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:filter.MjModel)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional bytes mjb = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_mjb();
    target = stream->WriteBytesMaybeAliased(1, _s, target);
  }

  // optional string xml = 2;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_xml();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "filter.MjModel.xml");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:filter.MjModel)
  return target;
}

::size_t MjModel::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:filter.MjModel)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional bytes mjb = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                      this->_internal_mjb());
    }

    // optional string xml = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_xml());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData MjModel::_class_data_ = {
    MjModel::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* MjModel::GetClassData() const {
  return &_class_data_;
}

void MjModel::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<MjModel*>(&to_msg);
  auto& from = static_cast<const MjModel&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:filter.MjModel)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_mjb(from._internal_mjb());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_xml(from._internal_xml());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MjModel::CopyFrom(const MjModel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:filter.MjModel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool MjModel::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* MjModel::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void MjModel::InternalSwap(MjModel* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.mjb_, &other->_impl_.mjb_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.xml_, &other->_impl_.xml_, arena);
}

::google::protobuf::Metadata MjModel::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_filter_2eproto_getter, &descriptor_table_filter_2eproto_once,
      file_level_metadata_filter_2eproto[0]);
}
// ===================================================================

class InitRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<InitRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(InitRequest, _impl_._has_bits_);
  static const ::filter::MjModel& model(const InitRequest* msg);
  static void set_has_model(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::filter::MjModel& InitRequest::_Internal::model(const InitRequest* msg) {
  return *msg->_impl_.model_;
}
InitRequest::InitRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:filter.InitRequest)
}
inline PROTOBUF_NDEBUG_INLINE InitRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

InitRequest::InitRequest(
    ::google::protobuf::Arena* arena,
    const InitRequest& from)
    : ::google::protobuf::Message(arena) {
  InitRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.model_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::filter::MjModel>(arena, *from._impl_.model_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:filter.InitRequest)
}
inline PROTOBUF_NDEBUG_INLINE InitRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void InitRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.model_ = {};
}
InitRequest::~InitRequest() {
  // @@protoc_insertion_point(destructor:filter.InitRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void InitRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.model_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void InitRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:filter.InitRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.model_ != nullptr);
    _impl_.model_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* InitRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> InitRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(InitRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_InitRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional .filter.MjModel model = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(InitRequest, _impl_.model_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .filter.MjModel model = 1;
    {PROTOBUF_FIELD_OFFSET(InitRequest, _impl_.model_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::filter::MjModel>()},
  }}, {{
  }},
};

::uint8_t* InitRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:filter.InitRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .filter.MjModel model = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::model(this),
        _Internal::model(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:filter.InitRequest)
  return target;
}

::size_t InitRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:filter.InitRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .filter.MjModel model = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.model_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData InitRequest::_class_data_ = {
    InitRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* InitRequest::GetClassData() const {
  return &_class_data_;
}

void InitRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<InitRequest*>(&to_msg);
  auto& from = static_cast<const InitRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:filter.InitRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_model()->::filter::MjModel::MergeFrom(
        from._internal_model());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void InitRequest::CopyFrom(const InitRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:filter.InitRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool InitRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* InitRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void InitRequest::InternalSwap(InitRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.model_, other->_impl_.model_);
}

::google::protobuf::Metadata InitRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_filter_2eproto_getter, &descriptor_table_filter_2eproto_once,
      file_level_metadata_filter_2eproto[1]);
}
// ===================================================================

class InitResponse::_Internal {
 public:
};

InitResponse::InitResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:filter.InitResponse)
}
InitResponse::InitResponse(
    ::google::protobuf::Arena* arena,
    const InitResponse& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  InitResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:filter.InitResponse)
}









::google::protobuf::Metadata InitResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_filter_2eproto_getter, &descriptor_table_filter_2eproto_once,
      file_level_metadata_filter_2eproto[2]);
}
// ===================================================================

class ResetRequest::_Internal {
 public:
};

ResetRequest::ResetRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:filter.ResetRequest)
}
ResetRequest::ResetRequest(
    ::google::protobuf::Arena* arena,
    const ResetRequest& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  ResetRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:filter.ResetRequest)
}









::google::protobuf::Metadata ResetRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_filter_2eproto_getter, &descriptor_table_filter_2eproto_once,
      file_level_metadata_filter_2eproto[3]);
}
// ===================================================================

class ResetResponse::_Internal {
 public:
};

ResetResponse::ResetResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:filter.ResetResponse)
}
ResetResponse::ResetResponse(
    ::google::protobuf::Arena* arena,
    const ResetResponse& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  ResetResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:filter.ResetResponse)
}









::google::protobuf::Metadata ResetResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_filter_2eproto_getter, &descriptor_table_filter_2eproto_once,
      file_level_metadata_filter_2eproto[4]);
}
// ===================================================================

class UpdateRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<UpdateRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(UpdateRequest, _impl_._has_bits_);
  static void set_has_mode(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

UpdateRequest::UpdateRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:filter.UpdateRequest)
}
inline PROTOBUF_NDEBUG_INLINE UpdateRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        ctrl_{visibility, arena, from.ctrl_},
        sensor_{visibility, arena, from.sensor_} {}

UpdateRequest::UpdateRequest(
    ::google::protobuf::Arena* arena,
    const UpdateRequest& from)
    : ::google::protobuf::Message(arena) {
  UpdateRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.mode_ = from._impl_.mode_;

  // @@protoc_insertion_point(copy_constructor:filter.UpdateRequest)
}
inline PROTOBUF_NDEBUG_INLINE UpdateRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        ctrl_{visibility, arena},
        sensor_{visibility, arena} {}

inline void UpdateRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.mode_ = {};
}
UpdateRequest::~UpdateRequest() {
  // @@protoc_insertion_point(destructor:filter.UpdateRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void UpdateRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void UpdateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:filter.UpdateRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ctrl_.Clear();
  _impl_.sensor_.Clear();
  _impl_.mode_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* UpdateRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> UpdateRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(UpdateRequest, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_UpdateRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated double ctrl = 1 [packed = true];
    {::_pbi::TcParser::FastF64P1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(UpdateRequest, _impl_.ctrl_)}},
    // repeated double sensor = 2 [packed = true];
    {::_pbi::TcParser::FastF64P1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(UpdateRequest, _impl_.sensor_)}},
    // optional int32 mode = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(UpdateRequest, _impl_.mode_), 0>(),
     {24, 0, 0, PROTOBUF_FIELD_OFFSET(UpdateRequest, _impl_.mode_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated double ctrl = 1 [packed = true];
    {PROTOBUF_FIELD_OFFSET(UpdateRequest, _impl_.ctrl_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedDouble)},
    // repeated double sensor = 2 [packed = true];
    {PROTOBUF_FIELD_OFFSET(UpdateRequest, _impl_.sensor_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedDouble)},
    // optional int32 mode = 3;
    {PROTOBUF_FIELD_OFFSET(UpdateRequest, _impl_.mode_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* UpdateRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:filter.UpdateRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated double ctrl = 1 [packed = true];
  if (this->_internal_ctrl_size() > 0) {
    target = stream->WriteFixedPacked(1, _internal_ctrl(), target);
  }

  // repeated double sensor = 2 [packed = true];
  if (this->_internal_sensor_size() > 0) {
    target = stream->WriteFixedPacked(2, _internal_sensor(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 mode = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_mode(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:filter.UpdateRequest)
  return target;
}

::size_t UpdateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:filter.UpdateRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated double ctrl = 1 [packed = true];
  {
    std::size_t data_size = std::size_t{8} *
        ::_pbi::FromIntSize(this->_internal_ctrl_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated double sensor = 2 [packed = true];
  {
    std::size_t data_size = std::size_t{8} *
        ::_pbi::FromIntSize(this->_internal_sensor_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // optional int32 mode = 3;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_mode());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData UpdateRequest::_class_data_ = {
    UpdateRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* UpdateRequest::GetClassData() const {
  return &_class_data_;
}

void UpdateRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<UpdateRequest*>(&to_msg);
  auto& from = static_cast<const UpdateRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:filter.UpdateRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_ctrl()->MergeFrom(from._internal_ctrl());
  _this->_internal_mutable_sensor()->MergeFrom(from._internal_sensor());
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_mode(from._internal_mode());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateRequest::CopyFrom(const UpdateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:filter.UpdateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool UpdateRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* UpdateRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void UpdateRequest::InternalSwap(UpdateRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.ctrl_.InternalSwap(&other->_impl_.ctrl_);
  _impl_.sensor_.InternalSwap(&other->_impl_.sensor_);
        swap(_impl_.mode_, other->_impl_.mode_);
}

::google::protobuf::Metadata UpdateRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_filter_2eproto_getter, &descriptor_table_filter_2eproto_once,
      file_level_metadata_filter_2eproto[5]);
}
// ===================================================================

class UpdateResponse::_Internal {
 public:
};

UpdateResponse::UpdateResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:filter.UpdateResponse)
}
UpdateResponse::UpdateResponse(
    ::google::protobuf::Arena* arena,
    const UpdateResponse& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  UpdateResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:filter.UpdateResponse)
}









::google::protobuf::Metadata UpdateResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_filter_2eproto_getter, &descriptor_table_filter_2eproto_once,
      file_level_metadata_filter_2eproto[6]);
}
// ===================================================================

class State::_Internal {
 public:
  using HasBits = decltype(std::declval<State>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(State, _impl_._has_bits_);
  static void set_has_time(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

State::State(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:filter.State)
}
inline PROTOBUF_NDEBUG_INLINE State::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        state_{visibility, arena, from.state_},
        qfrc_{visibility, arena, from.qfrc_} {}

State::State(
    ::google::protobuf::Arena* arena,
    const State& from)
    : ::google::protobuf::Message(arena) {
  State* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.time_ = from._impl_.time_;

  // @@protoc_insertion_point(copy_constructor:filter.State)
}
inline PROTOBUF_NDEBUG_INLINE State::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        state_{visibility, arena},
        qfrc_{visibility, arena} {}

inline void State::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.time_ = {};
}
State::~State() {
  // @@protoc_insertion_point(destructor:filter.State)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void State::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void State::Clear() {
// @@protoc_insertion_point(message_clear_start:filter.State)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.state_.Clear();
  _impl_.qfrc_.Clear();
  _impl_.time_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* State::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> State::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(State, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_State_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated double state = 1 [packed = true];
    {::_pbi::TcParser::FastF64P1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(State, _impl_.state_)}},
    // optional double time = 2;
    {::_pbi::TcParser::FastF64S1,
     {17, 0, 0, PROTOBUF_FIELD_OFFSET(State, _impl_.time_)}},
    // repeated double qfrc = 3 [packed = true];
    {::_pbi::TcParser::FastF64P1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(State, _impl_.qfrc_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated double state = 1 [packed = true];
    {PROTOBUF_FIELD_OFFSET(State, _impl_.state_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedDouble)},
    // optional double time = 2;
    {PROTOBUF_FIELD_OFFSET(State, _impl_.time_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // repeated double qfrc = 3 [packed = true];
    {PROTOBUF_FIELD_OFFSET(State, _impl_.qfrc_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedDouble)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* State::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:filter.State)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated double state = 1 [packed = true];
  if (this->_internal_state_size() > 0) {
    target = stream->WriteFixedPacked(1, _internal_state(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional double time = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        2, this->_internal_time(), target);
  }

  // repeated double qfrc = 3 [packed = true];
  if (this->_internal_qfrc_size() > 0) {
    target = stream->WriteFixedPacked(3, _internal_qfrc(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:filter.State)
  return target;
}

::size_t State::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:filter.State)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated double state = 1 [packed = true];
  {
    std::size_t data_size = std::size_t{8} *
        ::_pbi::FromIntSize(this->_internal_state_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated double qfrc = 3 [packed = true];
  {
    std::size_t data_size = std::size_t{8} *
        ::_pbi::FromIntSize(this->_internal_qfrc_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // optional double time = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 9;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData State::_class_data_ = {
    State::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* State::GetClassData() const {
  return &_class_data_;
}

void State::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<State*>(&to_msg);
  auto& from = static_cast<const State&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:filter.State)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_state()->MergeFrom(from._internal_state());
  _this->_internal_mutable_qfrc()->MergeFrom(from._internal_qfrc());
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_time(from._internal_time());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void State::CopyFrom(const State& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:filter.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool State::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* State::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void State::InternalSwap(State* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.state_.InternalSwap(&other->_impl_.state_);
  _impl_.qfrc_.InternalSwap(&other->_impl_.qfrc_);
        swap(_impl_.time_, other->_impl_.time_);
}

::google::protobuf::Metadata State::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_filter_2eproto_getter, &descriptor_table_filter_2eproto_once,
      file_level_metadata_filter_2eproto[7]);
}
// ===================================================================

class StateRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<StateRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(StateRequest, _impl_._has_bits_);
  static const ::filter::State& state(const StateRequest* msg);
  static void set_has_state(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::filter::State& StateRequest::_Internal::state(const StateRequest* msg) {
  return *msg->_impl_.state_;
}
StateRequest::StateRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:filter.StateRequest)
}
inline PROTOBUF_NDEBUG_INLINE StateRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

StateRequest::StateRequest(
    ::google::protobuf::Arena* arena,
    const StateRequest& from)
    : ::google::protobuf::Message(arena) {
  StateRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.state_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::filter::State>(arena, *from._impl_.state_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:filter.StateRequest)
}
inline PROTOBUF_NDEBUG_INLINE StateRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void StateRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.state_ = {};
}
StateRequest::~StateRequest() {
  // @@protoc_insertion_point(destructor:filter.StateRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void StateRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.state_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void StateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:filter.StateRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.state_ != nullptr);
    _impl_.state_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* StateRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> StateRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(StateRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_StateRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .filter.State state = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(StateRequest, _impl_.state_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .filter.State state = 1;
    {PROTOBUF_FIELD_OFFSET(StateRequest, _impl_.state_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::filter::State>()},
  }}, {{
  }},
};

::uint8_t* StateRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:filter.StateRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .filter.State state = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::state(this),
        _Internal::state(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:filter.StateRequest)
  return target;
}

::size_t StateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:filter.StateRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .filter.State state = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.state_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData StateRequest::_class_data_ = {
    StateRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* StateRequest::GetClassData() const {
  return &_class_data_;
}

void StateRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<StateRequest*>(&to_msg);
  auto& from = static_cast<const StateRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:filter.StateRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_state()->::filter::State::MergeFrom(
        from._internal_state());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void StateRequest::CopyFrom(const StateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:filter.StateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool StateRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* StateRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void StateRequest::InternalSwap(StateRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.state_, other->_impl_.state_);
}

::google::protobuf::Metadata StateRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_filter_2eproto_getter, &descriptor_table_filter_2eproto_once,
      file_level_metadata_filter_2eproto[8]);
}
// ===================================================================

class StateResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<StateResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(StateResponse, _impl_._has_bits_);
  static const ::filter::State& state(const StateResponse* msg);
  static void set_has_state(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::filter::State& StateResponse::_Internal::state(const StateResponse* msg) {
  return *msg->_impl_.state_;
}
StateResponse::StateResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:filter.StateResponse)
}
inline PROTOBUF_NDEBUG_INLINE StateResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

StateResponse::StateResponse(
    ::google::protobuf::Arena* arena,
    const StateResponse& from)
    : ::google::protobuf::Message(arena) {
  StateResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.state_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::filter::State>(arena, *from._impl_.state_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:filter.StateResponse)
}
inline PROTOBUF_NDEBUG_INLINE StateResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void StateResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.state_ = {};
}
StateResponse::~StateResponse() {
  // @@protoc_insertion_point(destructor:filter.StateResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void StateResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.state_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void StateResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:filter.StateResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.state_ != nullptr);
    _impl_.state_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* StateResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> StateResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(StateResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_StateResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .filter.State state = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(StateResponse, _impl_.state_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .filter.State state = 1;
    {PROTOBUF_FIELD_OFFSET(StateResponse, _impl_.state_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::filter::State>()},
  }}, {{
  }},
};

::uint8_t* StateResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:filter.StateResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .filter.State state = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::state(this),
        _Internal::state(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:filter.StateResponse)
  return target;
}

::size_t StateResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:filter.StateResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .filter.State state = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.state_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData StateResponse::_class_data_ = {
    StateResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* StateResponse::GetClassData() const {
  return &_class_data_;
}

void StateResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<StateResponse*>(&to_msg);
  auto& from = static_cast<const StateResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:filter.StateResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_state()->::filter::State::MergeFrom(
        from._internal_state());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void StateResponse::CopyFrom(const StateResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:filter.StateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool StateResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* StateResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void StateResponse::InternalSwap(StateResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.state_, other->_impl_.state_);
}

::google::protobuf::Metadata StateResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_filter_2eproto_getter, &descriptor_table_filter_2eproto_once,
      file_level_metadata_filter_2eproto[9]);
}
// ===================================================================

class Covariance::_Internal {
 public:
  using HasBits = decltype(std::declval<Covariance>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Covariance, _impl_._has_bits_);
  static void set_has_dimension(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

Covariance::Covariance(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:filter.Covariance)
}
inline PROTOBUF_NDEBUG_INLINE Covariance::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        covariance_{visibility, arena, from.covariance_} {}

Covariance::Covariance(
    ::google::protobuf::Arena* arena,
    const Covariance& from)
    : ::google::protobuf::Message(arena) {
  Covariance* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.dimension_ = from._impl_.dimension_;

  // @@protoc_insertion_point(copy_constructor:filter.Covariance)
}
inline PROTOBUF_NDEBUG_INLINE Covariance::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        covariance_{visibility, arena} {}

inline void Covariance::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.dimension_ = {};
}
Covariance::~Covariance() {
  // @@protoc_insertion_point(destructor:filter.Covariance)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Covariance::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Covariance::Clear() {
// @@protoc_insertion_point(message_clear_start:filter.Covariance)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.covariance_.Clear();
  _impl_.dimension_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Covariance::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> Covariance::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Covariance, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Covariance_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional int32 dimension = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Covariance, _impl_.dimension_), 0>(),
     {16, 0, 0, PROTOBUF_FIELD_OFFSET(Covariance, _impl_.dimension_)}},
    // repeated double covariance = 1 [packed = true];
    {::_pbi::TcParser::FastF64P1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Covariance, _impl_.covariance_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated double covariance = 1 [packed = true];
    {PROTOBUF_FIELD_OFFSET(Covariance, _impl_.covariance_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedDouble)},
    // optional int32 dimension = 2;
    {PROTOBUF_FIELD_OFFSET(Covariance, _impl_.dimension_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* Covariance::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:filter.Covariance)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated double covariance = 1 [packed = true];
  if (this->_internal_covariance_size() > 0) {
    target = stream->WriteFixedPacked(1, _internal_covariance(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional int32 dimension = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_dimension(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:filter.Covariance)
  return target;
}

::size_t Covariance::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:filter.Covariance)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated double covariance = 1 [packed = true];
  {
    std::size_t data_size = std::size_t{8} *
        ::_pbi::FromIntSize(this->_internal_covariance_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // optional int32 dimension = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_dimension());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Covariance::_class_data_ = {
    Covariance::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Covariance::GetClassData() const {
  return &_class_data_;
}

void Covariance::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Covariance*>(&to_msg);
  auto& from = static_cast<const Covariance&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:filter.Covariance)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_covariance()->MergeFrom(from._internal_covariance());
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_dimension(from._internal_dimension());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Covariance::CopyFrom(const Covariance& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:filter.Covariance)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Covariance::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Covariance::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Covariance::InternalSwap(Covariance* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.covariance_.InternalSwap(&other->_impl_.covariance_);
        swap(_impl_.dimension_, other->_impl_.dimension_);
}

::google::protobuf::Metadata Covariance::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_filter_2eproto_getter, &descriptor_table_filter_2eproto_once,
      file_level_metadata_filter_2eproto[10]);
}
// ===================================================================

class CovarianceRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<CovarianceRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CovarianceRequest, _impl_._has_bits_);
  static const ::filter::Covariance& covariance(const CovarianceRequest* msg);
  static void set_has_covariance(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::filter::Covariance& CovarianceRequest::_Internal::covariance(const CovarianceRequest* msg) {
  return *msg->_impl_.covariance_;
}
CovarianceRequest::CovarianceRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:filter.CovarianceRequest)
}
inline PROTOBUF_NDEBUG_INLINE CovarianceRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

CovarianceRequest::CovarianceRequest(
    ::google::protobuf::Arena* arena,
    const CovarianceRequest& from)
    : ::google::protobuf::Message(arena) {
  CovarianceRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.covariance_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::filter::Covariance>(arena, *from._impl_.covariance_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:filter.CovarianceRequest)
}
inline PROTOBUF_NDEBUG_INLINE CovarianceRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void CovarianceRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.covariance_ = {};
}
CovarianceRequest::~CovarianceRequest() {
  // @@protoc_insertion_point(destructor:filter.CovarianceRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CovarianceRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.covariance_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void CovarianceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:filter.CovarianceRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.covariance_ != nullptr);
    _impl_.covariance_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CovarianceRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> CovarianceRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CovarianceRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CovarianceRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .filter.Covariance covariance = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CovarianceRequest, _impl_.covariance_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .filter.Covariance covariance = 1;
    {PROTOBUF_FIELD_OFFSET(CovarianceRequest, _impl_.covariance_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::filter::Covariance>()},
  }}, {{
  }},
};

::uint8_t* CovarianceRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:filter.CovarianceRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .filter.Covariance covariance = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::covariance(this),
        _Internal::covariance(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:filter.CovarianceRequest)
  return target;
}

::size_t CovarianceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:filter.CovarianceRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .filter.Covariance covariance = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.covariance_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CovarianceRequest::_class_data_ = {
    CovarianceRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* CovarianceRequest::GetClassData() const {
  return &_class_data_;
}

void CovarianceRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CovarianceRequest*>(&to_msg);
  auto& from = static_cast<const CovarianceRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:filter.CovarianceRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_covariance()->::filter::Covariance::MergeFrom(
        from._internal_covariance());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CovarianceRequest::CopyFrom(const CovarianceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:filter.CovarianceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CovarianceRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* CovarianceRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void CovarianceRequest::InternalSwap(CovarianceRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.covariance_, other->_impl_.covariance_);
}

::google::protobuf::Metadata CovarianceRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_filter_2eproto_getter, &descriptor_table_filter_2eproto_once,
      file_level_metadata_filter_2eproto[11]);
}
// ===================================================================

class CovarianceResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CovarianceResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CovarianceResponse, _impl_._has_bits_);
  static const ::filter::Covariance& covariance(const CovarianceResponse* msg);
  static void set_has_covariance(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::filter::Covariance& CovarianceResponse::_Internal::covariance(const CovarianceResponse* msg) {
  return *msg->_impl_.covariance_;
}
CovarianceResponse::CovarianceResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:filter.CovarianceResponse)
}
inline PROTOBUF_NDEBUG_INLINE CovarianceResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

CovarianceResponse::CovarianceResponse(
    ::google::protobuf::Arena* arena,
    const CovarianceResponse& from)
    : ::google::protobuf::Message(arena) {
  CovarianceResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.covariance_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::filter::Covariance>(arena, *from._impl_.covariance_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:filter.CovarianceResponse)
}
inline PROTOBUF_NDEBUG_INLINE CovarianceResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void CovarianceResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.covariance_ = {};
}
CovarianceResponse::~CovarianceResponse() {
  // @@protoc_insertion_point(destructor:filter.CovarianceResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CovarianceResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.covariance_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void CovarianceResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:filter.CovarianceResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.covariance_ != nullptr);
    _impl_.covariance_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CovarianceResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> CovarianceResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CovarianceResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CovarianceResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .filter.Covariance covariance = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CovarianceResponse, _impl_.covariance_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .filter.Covariance covariance = 1;
    {PROTOBUF_FIELD_OFFSET(CovarianceResponse, _impl_.covariance_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::filter::Covariance>()},
  }}, {{
  }},
};

::uint8_t* CovarianceResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:filter.CovarianceResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .filter.Covariance covariance = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::covariance(this),
        _Internal::covariance(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:filter.CovarianceResponse)
  return target;
}

::size_t CovarianceResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:filter.CovarianceResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .filter.Covariance covariance = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.covariance_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CovarianceResponse::_class_data_ = {
    CovarianceResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* CovarianceResponse::GetClassData() const {
  return &_class_data_;
}

void CovarianceResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CovarianceResponse*>(&to_msg);
  auto& from = static_cast<const CovarianceResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:filter.CovarianceResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_covariance()->::filter::Covariance::MergeFrom(
        from._internal_covariance());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CovarianceResponse::CopyFrom(const CovarianceResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:filter.CovarianceResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CovarianceResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* CovarianceResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void CovarianceResponse::InternalSwap(CovarianceResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.covariance_, other->_impl_.covariance_);
}

::google::protobuf::Metadata CovarianceResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_filter_2eproto_getter, &descriptor_table_filter_2eproto_once,
      file_level_metadata_filter_2eproto[12]);
}
// ===================================================================

class Noise::_Internal {
 public:
};

Noise::Noise(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:filter.Noise)
}
inline PROTOBUF_NDEBUG_INLINE Noise::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : process_{visibility, arena, from.process_},
        sensor_{visibility, arena, from.sensor_},
        _cached_size_{0} {}

Noise::Noise(
    ::google::protobuf::Arena* arena,
    const Noise& from)
    : ::google::protobuf::Message(arena) {
  Noise* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:filter.Noise)
}
inline PROTOBUF_NDEBUG_INLINE Noise::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : process_{visibility, arena},
        sensor_{visibility, arena},
        _cached_size_{0} {}

inline void Noise::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Noise::~Noise() {
  // @@protoc_insertion_point(destructor:filter.Noise)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Noise::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Noise::Clear() {
// @@protoc_insertion_point(message_clear_start:filter.Noise)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.process_.Clear();
  _impl_.sensor_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Noise::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> Noise::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Noise_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated double sensor = 2 [packed = true];
    {::_pbi::TcParser::FastF64P1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Noise, _impl_.sensor_)}},
    // repeated double process = 1 [packed = true];
    {::_pbi::TcParser::FastF64P1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Noise, _impl_.process_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated double process = 1 [packed = true];
    {PROTOBUF_FIELD_OFFSET(Noise, _impl_.process_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedDouble)},
    // repeated double sensor = 2 [packed = true];
    {PROTOBUF_FIELD_OFFSET(Noise, _impl_.sensor_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedDouble)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* Noise::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:filter.Noise)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated double process = 1 [packed = true];
  if (this->_internal_process_size() > 0) {
    target = stream->WriteFixedPacked(1, _internal_process(), target);
  }

  // repeated double sensor = 2 [packed = true];
  if (this->_internal_sensor_size() > 0) {
    target = stream->WriteFixedPacked(2, _internal_sensor(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:filter.Noise)
  return target;
}

::size_t Noise::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:filter.Noise)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated double process = 1 [packed = true];
  {
    std::size_t data_size = std::size_t{8} *
        ::_pbi::FromIntSize(this->_internal_process_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated double sensor = 2 [packed = true];
  {
    std::size_t data_size = std::size_t{8} *
        ::_pbi::FromIntSize(this->_internal_sensor_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Noise::_class_data_ = {
    Noise::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Noise::GetClassData() const {
  return &_class_data_;
}

void Noise::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Noise*>(&to_msg);
  auto& from = static_cast<const Noise&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:filter.Noise)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_process()->MergeFrom(from._internal_process());
  _this->_internal_mutable_sensor()->MergeFrom(from._internal_sensor());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Noise::CopyFrom(const Noise& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:filter.Noise)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Noise::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Noise::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Noise::InternalSwap(Noise* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.process_.InternalSwap(&other->_impl_.process_);
  _impl_.sensor_.InternalSwap(&other->_impl_.sensor_);
}

::google::protobuf::Metadata Noise::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_filter_2eproto_getter, &descriptor_table_filter_2eproto_once,
      file_level_metadata_filter_2eproto[13]);
}
// ===================================================================

class NoiseRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<NoiseRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(NoiseRequest, _impl_._has_bits_);
  static const ::filter::Noise& noise(const NoiseRequest* msg);
  static void set_has_noise(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::filter::Noise& NoiseRequest::_Internal::noise(const NoiseRequest* msg) {
  return *msg->_impl_.noise_;
}
NoiseRequest::NoiseRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:filter.NoiseRequest)
}
inline PROTOBUF_NDEBUG_INLINE NoiseRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

NoiseRequest::NoiseRequest(
    ::google::protobuf::Arena* arena,
    const NoiseRequest& from)
    : ::google::protobuf::Message(arena) {
  NoiseRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.noise_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::filter::Noise>(arena, *from._impl_.noise_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:filter.NoiseRequest)
}
inline PROTOBUF_NDEBUG_INLINE NoiseRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void NoiseRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.noise_ = {};
}
NoiseRequest::~NoiseRequest() {
  // @@protoc_insertion_point(destructor:filter.NoiseRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void NoiseRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.noise_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void NoiseRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:filter.NoiseRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.noise_ != nullptr);
    _impl_.noise_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* NoiseRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> NoiseRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(NoiseRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_NoiseRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .filter.Noise noise = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(NoiseRequest, _impl_.noise_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .filter.Noise noise = 1;
    {PROTOBUF_FIELD_OFFSET(NoiseRequest, _impl_.noise_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::filter::Noise>()},
  }}, {{
  }},
};

::uint8_t* NoiseRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:filter.NoiseRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .filter.Noise noise = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::noise(this),
        _Internal::noise(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:filter.NoiseRequest)
  return target;
}

::size_t NoiseRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:filter.NoiseRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .filter.Noise noise = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.noise_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData NoiseRequest::_class_data_ = {
    NoiseRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* NoiseRequest::GetClassData() const {
  return &_class_data_;
}

void NoiseRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<NoiseRequest*>(&to_msg);
  auto& from = static_cast<const NoiseRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:filter.NoiseRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_noise()->::filter::Noise::MergeFrom(
        from._internal_noise());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NoiseRequest::CopyFrom(const NoiseRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:filter.NoiseRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool NoiseRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* NoiseRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void NoiseRequest::InternalSwap(NoiseRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.noise_, other->_impl_.noise_);
}

::google::protobuf::Metadata NoiseRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_filter_2eproto_getter, &descriptor_table_filter_2eproto_once,
      file_level_metadata_filter_2eproto[14]);
}
// ===================================================================

class NoiseResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<NoiseResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(NoiseResponse, _impl_._has_bits_);
  static const ::filter::Noise& noise(const NoiseResponse* msg);
  static void set_has_noise(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::filter::Noise& NoiseResponse::_Internal::noise(const NoiseResponse* msg) {
  return *msg->_impl_.noise_;
}
NoiseResponse::NoiseResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:filter.NoiseResponse)
}
inline PROTOBUF_NDEBUG_INLINE NoiseResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

NoiseResponse::NoiseResponse(
    ::google::protobuf::Arena* arena,
    const NoiseResponse& from)
    : ::google::protobuf::Message(arena) {
  NoiseResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.noise_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::filter::Noise>(arena, *from._impl_.noise_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:filter.NoiseResponse)
}
inline PROTOBUF_NDEBUG_INLINE NoiseResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void NoiseResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.noise_ = {};
}
NoiseResponse::~NoiseResponse() {
  // @@protoc_insertion_point(destructor:filter.NoiseResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void NoiseResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.noise_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void NoiseResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:filter.NoiseResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.noise_ != nullptr);
    _impl_.noise_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* NoiseResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> NoiseResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(NoiseResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_NoiseResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .filter.Noise noise = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(NoiseResponse, _impl_.noise_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .filter.Noise noise = 1;
    {PROTOBUF_FIELD_OFFSET(NoiseResponse, _impl_.noise_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::filter::Noise>()},
  }}, {{
  }},
};

::uint8_t* NoiseResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:filter.NoiseResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .filter.Noise noise = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::noise(this),
        _Internal::noise(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:filter.NoiseResponse)
  return target;
}

::size_t NoiseResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:filter.NoiseResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .filter.Noise noise = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.noise_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData NoiseResponse::_class_data_ = {
    NoiseResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* NoiseResponse::GetClassData() const {
  return &_class_data_;
}

void NoiseResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<NoiseResponse*>(&to_msg);
  auto& from = static_cast<const NoiseResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:filter.NoiseResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_noise()->::filter::Noise::MergeFrom(
        from._internal_noise());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NoiseResponse::CopyFrom(const NoiseResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:filter.NoiseResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool NoiseResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* NoiseResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void NoiseResponse::InternalSwap(NoiseResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.noise_, other->_impl_.noise_);
}

::google::protobuf::Metadata NoiseResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_filter_2eproto_getter, &descriptor_table_filter_2eproto_once,
      file_level_metadata_filter_2eproto[15]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace filter
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
